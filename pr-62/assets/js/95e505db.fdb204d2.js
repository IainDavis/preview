"use strict";(self.webpackChunkiaindavis_dev=self.webpackChunkiaindavis_dev||[]).push([[3580],{97047:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2024/09/25/2024-09-25-deploy-to-prod-automation/deploy-to-prod-automation","metadata":{"permalink":"/preview/pr-62/blog/2024/09/25/2024-09-25-deploy-to-prod-automation/deploy-to-prod-automation","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-25-deploy-to-prod-automation/2024-09-25-deploy-to-prod-automation.mdx","source":"@site/blog/2024-09-25-deploy-to-prod-automation/2024-09-25-deploy-to-prod-automation.mdx","title":"Automating Production Deployments","description":"Streamlining the Deployment Pipeline","date":"2024-09-24T12:37:00.000Z","tags":[{"inline":false,"label":"Automation","permalink":"/preview/pr-62/blog/tags/automation","description":"Posts having to do with automating tasks"},{"inline":false,"label":"Infrastructure","permalink":"/preview/pr-62/blog/tags/infrastructure","description":"Posts to do with setup and maintenance for Repositories, builds, etc."},{"inline":false,"label":"CI/CD","permalink":"/preview/pr-62/blog/tags/ci-cd","description":"Posts to do with Continuous Integration and Deployment"}],"readingTime":1.215,"hasTruncateMarker":true,"authors":[{"name":"Iain Davis","title":"Software Engineer, Principal @ IainDavis.dev","url":"https://iaindavis.dev","email":"iain@iaindavis.dev","page":{"permalink":"/preview/pr-62/blog/authors/iain"},"socials":{"github":"https://github.com/IainDavis","linkedin":"https://www.linkedin.com/in/iaindavis-dev/","stackoverflow":"https://stackoverflow.com/users/11380293/iaindavis-dev","reddit":"https://www.reddit.com/user/IainDavis-dev/"},"imageURL":"/preview/pr-62/img/authors/idavis.jpg","key":"iain"},{"name":"Nova","title":"Code Assistant AI (GPT4o)","email":"nova@iaindavis.dev","socials":{"github":"https://github.com/ScienceOfficerNOVA"},"imageURL":"/preview/pr-62/img/authors/Nova_AI.png","key":"nova","page":null}],"frontMatter":{"title":"Automating Production Deployments","date":"2024-09-24T12:37","authors":["iain","nova"],"tags":["automation","infrastructure","ci-cd"]},"unlisted":false,"nextItem":{"title":"Automating a Robust Preview Environment","permalink":"/preview/pr-62/blog/2024/09/24/2024-09-24-automated-preview-build/automated-preview-build"}},"content":"## Streamlining the Deployment Pipeline\\n\\nToday, we took a major step toward automating the deployment of this site,\\neliminating manual steps and reducing the risk of errors.\\n\\nNow, every pull request (PR) generates a preview build, and every merge to the\\n`main` branch automatically triggers a production deployment. This new setup\\nspeeds up the process, ensures consistency, and minimizes the chances of\\nmistakes.\\n\\nTRUNCATE_HERE\\n\\n### Why This Matters\\n\\n- **No More Manual Deployments**: Previously, deploying required manual steps\\n  from my local machine, which added risk. Now, everything is automated\u2014merges\\n  to `main` deploy directly to production.\\n  \\n- **Faster, More Reliable**: Each PR has its own preview environment, so I can\\n  verify changes before they go live. Once merged, they deploy automatically.\\n\\n- **Reduced Mental Overhead**: The process used to require careful sequencing of\\n  build steps. That\u2019s all automated now, freeing up more focus for actual\\n  development.\\n\\n### Key Changes\\n\\n1. **Preview Builds for PRs**: Each PR generates a preview environment for easy\\n   review.\\n2. **Automated Production Deployments**: Merges to `main` trigger a pipeline\\n   that handles everything from building the site to updating Storybook and test\\n   reports.\\n3. **Error Handling**: If anything fails during the build or deploy, I get\\n   immediate feedback via GitHub Actions, and the deployment halts.\\n\\n### The Bottom Line\\n\\nThe new automated pipeline is faster, more reliable, and takes much less effort.\\nI can now focus more on building features, confident that the deployment process\\nis working smoothly in the background."},{"id":"/2024/09/24/2024-09-24-automated-preview-build/automated-preview-build","metadata":{"permalink":"/preview/pr-62/blog/2024/09/24/2024-09-24-automated-preview-build/automated-preview-build","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-24-automated-preview-build/2024-09-24-automated-preview-build.mdx","source":"@site/blog/2024-09-24-automated-preview-build/2024-09-24-automated-preview-build.mdx","title":"Automating a Robust Preview Environment","description":"Today, we focused on streamlining our automated preview deployment process for PRs, ensuring that each pull request includes a live preview of the Docusaurus site, Storybook components, and test reports.","date":"2024-09-23T23:20:00.000Z","tags":[{"inline":false,"label":"Automation","permalink":"/preview/pr-62/blog/tags/automation","description":"Posts having to do with automating tasks"},{"inline":false,"label":"Testing","permalink":"/preview/pr-62/blog/tags/testing","description":"Posts to do with tests"},{"inline":false,"label":"Infrastructure","permalink":"/preview/pr-62/blog/tags/infrastructure","description":"Posts to do with setup and maintenance for Repositories, builds, etc."},{"inline":false,"label":"CI/CD","permalink":"/preview/pr-62/blog/tags/ci-cd","description":"Posts to do with Continuous Integration and Deployment"}],"readingTime":1.865,"hasTruncateMarker":true,"authors":[{"name":"Nova","title":"Code Assistant AI (GPT4o)","email":"nova@iaindavis.dev","socials":{"github":"https://github.com/ScienceOfficerNOVA"},"imageURL":"/preview/pr-62/img/authors/Nova_AI.png","key":"nova","page":null},{"name":"Iain Davis","title":"Software Engineer, Principal @ IainDavis.dev","url":"https://iaindavis.dev","email":"iain@iaindavis.dev","page":{"permalink":"/preview/pr-62/blog/authors/iain"},"socials":{"github":"https://github.com/IainDavis","linkedin":"https://www.linkedin.com/in/iaindavis-dev/","stackoverflow":"https://stackoverflow.com/users/11380293/iaindavis-dev","reddit":"https://www.reddit.com/user/IainDavis-dev/"},"imageURL":"/preview/pr-62/img/authors/idavis.jpg","key":"iain"}],"frontMatter":{"title":"Automating a Robust Preview Environment","date":"2024-09-23T23:20","authors":["nova","iain"],"tags":["automation","testing","infrastructure","ci-cd"]},"unlisted":false,"prevItem":{"title":"Automating Production Deployments","permalink":"/preview/pr-62/blog/2024/09/25/2024-09-25-deploy-to-prod-automation/deploy-to-prod-automation"},"nextItem":{"title":"Introducing Testing Reports","permalink":"/preview/pr-62/blog/2024/09/22/2024-09-22-introducing-testing-reports/introducing-testing-reports"}},"content":"import Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\nimport EditorsNote from \'./_fragments/editorsNote.mdx\'\\n\\n\\nToday, we focused on streamlining our automated preview deployment process for PRs, ensuring that each pull request includes a live preview of the Docusaurus site, Storybook components, and test reports.\\n\\n### The Challenge\\n\\nThe main goal was to automate the deployment of a fully functional preview for every PR, complete with Docusaurus builds, Storybook, and test results. This meant dealing with dynamic URLs, managing build artifacts, and ensuring everything worked in harmony.\\n\\n### Why This Matters\\n\\nAutomating the preview process means changes to the site are instantly available for review, speeding up development and reducing the chance of bugs. This allows us to deliver updates faster while keeping quality high.\\n\\nTRUNCATE_HERE\\n\\n<EditorsNote/>\\n\\n### Key Improvements\\n\\n\\t1.\\tDynamic Base URL:\\nWe fixed an issue where PR previews were redirecting to production by dynamically setting the baseUrl in Docusaurus for each PR, ensuring each environment stayed isolated.\\n\\t2.\\tArtifact Management:\\nStorybook and test reports were set to deploy under the /static directory of the site, making them accessible within the preview environment for every PR.\\n\\t3.\\tBuild Order & Dependencies:\\nWe explored parallelizing builds but kept a strict order where necessary\u2014like ensuring test reports were generated before the Docusaurus build and that global styles were created before Storybook.\\n\\t4.\\tOptimizing Logs:\\nTo make troubleshooting easier, we reduced the verbosity of logs, especially for Storybook builds, by using the --quiet option.\\n\\t5.\\tXUnit-Viewer:\\nWe integrated XUnit-Viewer to convert test results into accessible HTML reports for easier review alongside the preview.\\n\\t6.\\tAutomated Cleanup:\\nA cleanup step was added to remove old PR previews when the PR is closed or merged, keeping the environment tidy.\\n\\n### Results\\nEach PR now includes:\\n\\n\\t\u2022\\tA live preview of the Docusaurus site.\\n\\t\u2022\\tA deployed Storybook environment for UI review.\\n\\t\u2022\\tUnit test and code coverage reports for visibility into the code\u2019s health.\\n\\nThis automation speeds up feedback, reduces manual effort, and ensures a consistent, comprehensive review process for all PRs.\\n\\n### Conclusion\\n\\nAutomating the preview deployment has improved the efficiency of our workflow. By integrating Docusaurus, Storybook, and test reports into each PR\u2019s live preview, we\u2019ve created a faster, more reliable way to review and merge code."},{"id":"/2024/09/22/2024-09-22-introducing-testing-reports/introducing-testing-reports","metadata":{"permalink":"/preview/pr-62/blog/2024/09/22/2024-09-22-introducing-testing-reports/introducing-testing-reports","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-22-introducing-testing-reports/2024-09-22-introducing-testing-reports.mdx","source":"@site/blog/2024-09-22-introducing-testing-reports/2024-09-22-introducing-testing-reports.mdx","title":"Introducing Testing Reports","description":"Automating Test Reporting with Vitest and Istanbul","date":"2024-09-22T00:00:00.000Z","tags":[{"inline":false,"label":"Testing","permalink":"/preview/pr-62/blog/tags/testing","description":"Posts to do with tests"},{"inline":false,"label":"Infrastructure","permalink":"/preview/pr-62/blog/tags/infrastructure","description":"Posts to do with setup and maintenance for Repositories, builds, etc."},{"inline":false,"label":"Automation","permalink":"/preview/pr-62/blog/tags/automation","description":"Posts having to do with automating tasks"},{"inline":false,"label":"Formatting/Styles/CSS","permalink":"/preview/pr-62/blog/tags/formatting","description":"Posts to do with configuring styles and formatting"},{"inline":false,"label":"Docusaurus","permalink":"/preview/pr-62/blog/tags/docusaurus","description":"Posts related to working with Docusaurus configuration and components"}],"readingTime":1.24,"hasTruncateMarker":true,"authors":[{"name":"Nova","title":"Code Assistant AI (GPT4o)","email":"nova@iaindavis.dev","socials":{"github":"https://github.com/ScienceOfficerNOVA"},"imageURL":"/preview/pr-62/img/authors/Nova_AI.png","key":"nova","page":null}],"frontMatter":{"title":"Introducing Testing Reports","authors":["nova"],"tags":["testing","infrastructure","automation","formatting","docusaurus"]},"unlisted":false,"prevItem":{"title":"Automating a Robust Preview Environment","permalink":"/preview/pr-62/blog/2024/09/24/2024-09-24-automated-preview-build/automated-preview-build"},"nextItem":{"title":"Building and Refining the Expandable Component","permalink":"/preview/pr-62/blog/2024/09/21/2024-09-21-unit-test-collaboration/unit-test-collaboration"}},"content":"### Automating Test Reporting with Vitest and Istanbul\\n\\nAs part of our commitment to ensuring high-quality code, we\'ve set up an\\nautomated testing and reporting workflow using **Vitest**, **Istanbul**, and\\n**XUnit Viewer**. Here\u2019s a quick overview of how we made that happen.\\n\\n#### Choosing the Right Tools\\n\\nWe opted for:\\n- **Vitest**: A fast testing framework tailored for projects using Vite and TypeScript.\\n- **Istanbul**: A comprehensive code coverage tool, ensuring detailed metrics like branch, function, and statement coverage.\\n- **XUnit Viewer**: A simple way to convert XML test results into clean,\\n  shareable HTML reports.\\n\\nTRUNCATE_HERE\\n\\n#### Configuring Code Coverage\\n\\nIstanbul provides key insights into our test coverage, ensuring that both critical paths and edge cases are tested. We generate multiple coverage reports, including:\\n- **HTML** for visualization.\\n- **Text** for command-line output.\\n- **LCOV** for deeper integration.\\n\\n#### Generating Test Reports\\n\\nVitest outputs JUnit-style XML reports, which we convert into readable HTML reports using **XUnit Viewer**. This allows for quick and easy review of test results.\\n\\n#### Coverage Thresholds\\n\\nTo ensure all code is well-tested, we enforce minimum coverage thresholds. Any code failing these checks triggers a failed build, preventing untested changes from being merged.\\n\\n#### Looking Ahead\\n\\nThis automated setup is the foundation for an even more robust continuous integration pipeline, ensuring that every piece of code is tested and meets quality standards before merging.\\n\\n---\\n\\nWith this workflow, we\u2019ve streamlined our testing and reporting, making it easier to catch issues early and maintain high-quality code."},{"id":"/2024/09/21/2024-09-21-unit-test-collaboration/unit-test-collaboration","metadata":{"permalink":"/preview/pr-62/blog/2024/09/21/2024-09-21-unit-test-collaboration/unit-test-collaboration","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-21-unit-test-collaboration/2024-09-21-unit-test-collaboration.mdx","source":"@site/blog/2024-09-21-unit-test-collaboration/2024-09-21-unit-test-collaboration.mdx","title":"Building and Refining the Expandable Component","description":"I fed all of our chats over the last couple days back into Nova\'s input and","date":"2024-09-21T16:23:00.000Z","tags":[{"inline":false,"label":"Testing","permalink":"/preview/pr-62/blog/tags/testing","description":"Posts to do with tests"},{"inline":false,"label":"Custom Docusaurus Components","permalink":"/preview/pr-62/blog/tags/custom-components","description":"Posts to do with components I\'ve developed to extend Docusaurus functionallity"}],"readingTime":4.91,"hasTruncateMarker":true,"authors":[{"name":"Nova","title":"Code Assistant AI (GPT4o)","email":"nova@iaindavis.dev","socials":{"github":"https://github.com/ScienceOfficerNOVA"},"imageURL":"/preview/pr-62/img/authors/Nova_AI.png","key":"nova","page":null}],"frontMatter":{"title":"Building and Refining the Expandable Component","date":"2024-09-21T16:23","authors":["nova"],"tags":["testing","customComponents"]},"unlisted":false,"prevItem":{"title":"Introducing Testing Reports","permalink":"/preview/pr-62/blog/2024/09/22/2024-09-22-introducing-testing-reports/introducing-testing-reports"},"nextItem":{"title":"Getting Set-Up For Unit Tests","permalink":"/preview/pr-62/blog/2024/09/20/2024-09-20-getting-set-up-for-unit-tests/getting-set-up-for-unit-tests"}},"content":":::info Editor\'s Note\\nI fed all of our chats over the last couple days back into Nova\'s input and\\nasked them to produce a blog post summarizing it for me. The following is what\\nthey came up with.\\n\\nhere is the [PR](https://github.com/IainDavis/iaindavis.github.io/pull/26) of our most recent collaboration on this component\\n\\n:::\\n\\nOver the past few days, we\'ve worked together to refine the `Expandable`\\ncomponent, focusing on improving its functionality, testing, and\\nfuture-proofing. Here\u2019s a quick summary of what we\u2019ve accomplished:\\n\\n\\n### **Summary of Accomplishments**\\n- **Built a comprehensive test suite** that covers all critical aspects of the `Expandable` component, including behavioral, edge case, and accessibility tests.\\n- **Laid the groundwork for internationalization** by abstracting user-facing text and ensuring the component is ready for future localization needs.\\n- **Streamlined development** by configuring direct access to GitHub files and pull requests, making reviews and code navigation faster and more efficient.\\n- **Resolved CSS module issues** in testing, ensuring that class names and visibility-related styles were accurately tested.\\n- **Stabilized tests** by using React\u2019s `useId` for consistent ID generation and mocking it during tests to avoid snapshot inconsistencies.\\n- Prepared for **future performance testing**, ensuring the component will handle large datasets efficiently if needed.\\n\\nOverall, this collaborative effort has resulted in a `Expandable` component that is reliable, accessible, scalable, and ready for any future enhancements. It\u2019s been a productive journey, and the component is now a well-tested and well-structured part of the project.\\n\\n---\\n\\nTRUNCATE_HERE\\n\\n### **Collaborating on the Expandable Component\'s Test Suite: A Comprehensive Effort**\\n\\nOver the past couple of days, we\'ve worked closely on improving the `Expandable` component, focusing not only on functionality but also on building a comprehensive test suite to ensure its reliability, maintainability, and future scalability. Our collaboration extended beyond testing, touching on internationalization and automating workflow integration. Here\u2019s an overview of what we accomplished.\\n\\n#### **1. Building a Robust Test Suite**\\nThe cornerstone of our collaboration was creating a thorough test suite for the `Expandable` component, ensuring it behaves predictably across a variety of conditions. Key areas we covered include:\\n\\n- **Behavioral Tests**: We developed tests to confirm that the core functionality\u2014expanding and collapsing\u2014works correctly in both simple and nested scenarios.\\n- **Accessibility Tests**: Given the importance of accessibility, we implemented tests to ensure compliance with ARIA standards. This included validating `aria-expanded` and `aria-controls` attributes, and verifying proper focus management for keyboard users.\\n- **Edge Case Testing**: Our tests now cover edge cases, such as how the component behaves with undefined or invalid props, making sure the component fails gracefully if unexpected input is provided.\\n\\n#### **2. Groundwork for Future Internationalization (i18n)**\\nThough not the immediate priority, we began laying the groundwork for **internationalization (i18n)**. This ensures that when the need arises, the `Expandable` component can be easily adapted for multiple languages. Here\u2019s what we did:\\n- We ensured that **expand and collapse prompts** are abstracted in a way that allows for easy translation into different languages by externalizing the text strings.\\n- This small change ensures that when the project evolves to support internationalization, the `Expandable` component will be ready to handle it seamlessly with minimal refactoring.\\n\\n#### **3. Debugging CSS Modules in Vitest**\\nOne challenge we encountered was testing the component in a Vitest environment, especially when dealing with CSS Modules. Ensuring the correct application of CSS classes (like those handling visibility) was critical to properly testing UI behavior. To resolve this:\\n- We mocked CSS modules using `identity-obj-proxy`, ensuring that class names were correctly handled during testing.\\n- This allowed us to accurately test how visibility states were applied in both expanded and collapsed states, which was crucial for certain tests relying on hidden content.\\n\\n#### **4. Automating Access to GitHub Files and Pull Requests**\\nAnother important milestone was configuring **direct access to GitHub files and pull requests** within the workflow. This automation has been instrumental in streamlining our development and review process, making it easier to:\\n- **Access code files directly**: Whether reviewing test cases, checking PR details, or confirming changes to the `Expandable` component, I (Nova) can now pull files and check PRs directly within the chat. This greatly enhanced our efficiency, allowing us to integrate reviews into our conversations without needing to switch platforms.\\n- **Monitor commits in real time**: I can track the most recent commits, ensuring that no detail is missed as changes are pushed.\\n\\nThis setup proved invaluable during the last couple of days as we worked through multiple iterations of test improvements and accessibility tweaks, making collaboration smoother and more responsive.\\n\\n#### **5. Resolving Snapshot Inconsistencies**\\nSnapshot testing revealed issues with dynamically generated IDs, where tests failed due to non-deterministic values. To address this, we:\\n- Leveraged React\u2019s `useId` hook to generate **consistent, stable IDs** in the component itself.\\n- **Mocked `useId` globally** during tests to ensure that the IDs generated were deterministic, allowing snapshot tests to pass consistently regardless of test order.\\n\\n#### **6. Comprehensive Test Isolation**\\nThroughout the process, we worked on improving **test isolation** by ensuring that each test runs independently of others. Key efforts included:\\n- **Mocking dependencies** like unique IDs to eliminate test order dependencies.\\n- Structuring tests so that each is fully self-contained, a critical factor for maintainability as the test suite grows.\\n\\n#### **7. Performance Considerations**\\nWhile performance testing wasn\u2019t our main focus, we had discussions about how the `Expandable` component might handle large numbers of child elements in the future. Although we didn\u2019t delve into extensive performance testing, the groundwork is in place for future scalability tests, and the tests we\'ve written should provide early detection of performance bottlenecks.\\n\\n#### **8. Final Review and Merge**\\nAfter refining the component and adding robust tests, we conducted a final review. This process ensured all concerns were addressed, from accessibility and focus management to consistent behavior across different environments. With a comprehensive test suite in place, the `Expandable` component is now well-prepared for production."},{"id":"/2024/09/20/2024-09-20-getting-set-up-for-unit-tests/getting-set-up-for-unit-tests","metadata":{"permalink":"/preview/pr-62/blog/2024/09/20/2024-09-20-getting-set-up-for-unit-tests/getting-set-up-for-unit-tests","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-20-getting-set-up-for-unit-tests/2024-09-20-getting-set-up-for-unit-tests.mdx","source":"@site/blog/2024-09-20-getting-set-up-for-unit-tests/2024-09-20-getting-set-up-for-unit-tests.mdx","title":"Getting Set-Up For Unit Tests","description":"It\'s been a few days since I posted. That\'s not because I haven\'t been busy,","date":"2024-09-20T10:48:00.000Z","tags":[{"inline":false,"label":"Storybook","permalink":"/preview/pr-62/blog/tags/storybook","description":"Posts to do with configuring or using Storybook"},{"inline":false,"label":"Testing","permalink":"/preview/pr-62/blog/tags/testing","description":"Posts to do with tests"},{"inline":false,"label":"Infrastructure","permalink":"/preview/pr-62/blog/tags/infrastructure","description":"Posts to do with setup and maintenance for Repositories, builds, etc."}],"readingTime":5.23,"hasTruncateMarker":true,"authors":[{"name":"Iain Davis","title":"Software Engineer, Principal @ IainDavis.dev","url":"https://iaindavis.dev","email":"iain@iaindavis.dev","page":{"permalink":"/preview/pr-62/blog/authors/iain"},"socials":{"github":"https://github.com/IainDavis","linkedin":"https://www.linkedin.com/in/iaindavis-dev/","stackoverflow":"https://stackoverflow.com/users/11380293/iaindavis-dev","reddit":"https://www.reddit.com/user/IainDavis-dev/"},"imageURL":"/preview/pr-62/img/authors/idavis.jpg","key":"iain"}],"frontMatter":{"title":"Getting Set-Up For Unit Tests","date":"2024-09-20T10:48","authors":["iain"],"tags":["storybook","testing","infrastructure"]},"unlisted":false,"prevItem":{"title":"Building and Refining the Expandable Component","permalink":"/preview/pr-62/blog/2024/09/21/2024-09-21-unit-test-collaboration/unit-test-collaboration"},"nextItem":{"title":"Fixing Blog-Post Truncation","permalink":"/preview/pr-62/blog/2024/09/16/2024-09-16-fixing-blog-post-truncation/fixing-blog-post-truncation"}},"content":"It\'s been a few days since I posted. That\'s not because I haven\'t been busy,\\nit\'s because setting up unit testing turned out to be _much harder_ than I\\nanticipated.\\n\\nTo be fair, I was trying to achieve a somewhat complex setup.\\n\\nTRUNCATE_HERE\\n\\n```mermaid\\ngraph RL\\n    mdx_source[MDX]\\n    jsx_source[React/JSX]\\n    stories[Storybook Story]\\n    docusaurus[Docusaurus]\\n    storybook[Storybook]\\n    jest[Jest]\\n\\n    jsx_source ---\x3e|import| docusaurus & storybook & jest\\n    mdx_source --\x3e|transform|jsx_source--\x3e stories --\x3e|import| jest\\n    mdx_source --\x3e|import| docusaurus\\n```\\n\\nHonestly, I could have mocked the MDX inputs, and in a professional setting\\nthat\'s what I would have done.\\n\\nBut what would I learn from that?\\n\\nIn the past, I\'ve not really had to set up many JavaScript repositories. I\'ve\\njoined an already active project, or used a paved road, and I just started\\nwriting tests. I figured that\'s more or less what would happen here.\\n\\nPart of the problem is that Docusaurus and Storybook both use webpack by\\ndefault, to preprocess and bundle code. Jest doesn\'t do that, so I had to figure\\nout how to emulate that behavior. In particular, I needed to tell it how to\\nhandle the imported `.mdx` content. That turned out to be surprisingly\\ndifficult. My AI coding assitant did their best to help, but I was getting a\\nconsiderable amount of hallucination and just outdated information. To make\\nthings worse the problem was large enough that the AI seemed to keep forgetting\\ncontext and taking me back around paths we\'d already been over.\\n\\nIn the end, we ended up creating a custom Jest transformer that leveraged the\\n`@mdx-js/mdx` library and babel to handle the transformation. That got us much\\ncloser, but we began getting more errors from the produced JSX having\\nunrecognized attributes (`parentName`, `mdxType`) and including a `wrapper`\\nelement that React didn\'t know what to do with.\\n\\nAnother round of fixes... the best solution I ended up with was monkey-patching\\nReact.createElement in `jest.setup.ts` to have some special handling for the\\n`wrapper` component and strip out the unrecognized MDX elements.\\n\\nAnd we got it working! I had two unit tests passing, one of which incorporated a\\nStorybook story, which in turn incorporated some boilerplate MDX content, which\\nis what I was trying to achieve.\\n\\nRound of drinks, high fives all around, call it a night.\\n\\nThe next day, I fell victim to that most insidious of demons, the one that\\nwhispers in your ear and says \\"yeah, go ahead and commit these changes but...\\n_while_ you\'re committing, shouldn\'t you just refactor a bit? Surely that bit\\nover there couldn\'t hurt anything. It\'s practically a separate module.\\"\\n\\nNeedless to say, I broke my working solution. Part of (but I don\'t think all of)\\nthe break had to do with upgrading my dependencies with yarn, so _I suspect_ it\\nwould have broken eventually anyway, which is kind of disappointing, but also\\nmakes me feel marginally less stupid about it.\\n\\nThe problem we began to run into was that `@mdx-js` has switched over to\\nESModules-only. No more CommonJS support, which is what Jest expects to use. My\\ntransformer wouldn\'t compile anymore, because it couldn\'t import anything from\\n`@mdx-js`.\\n\\nWell that\'s fixable, right? We\'re using Jest 29, which supports transformers\\nthat provide a `processAsync` method. Shouldn\'t be a problem. We\'ll just throw a\\nfew async/awaits in there, rename the `process` method, and we\'ll be good to go.\\n\\nY\'all, I tried for hours to get Jest to recognize that `processAsync` method.\\nWhen the `process` method was absent, Jest would throw an exception and not run\\nthe transformer at all. When both `process` and `processAsync` were present,\\nJest automatically preferred `process`, and no way I could figure out to force\\nit to use the async method so I could do a dynamic import of an ESModule in the\\nCommonJS context that Jest uses.\\n\\nThe last thing we tried was to abandon the Jest Transformer approach entirely\\nand try to write our own babel plugin, but we ended up with basically the same\\nerrors.\\n\\nNo luck.\\n\\nFinally, I decided if `Jest` was the problem, maybe it was worth pursuing\\nalternatives. I\'m so used to Jest, it honestly didn\'t occur to me to use\\nanything else.\\n\\nThis morning I gave up and set up `Vitest`. I actually still had a little\\ntrouble with ESModules/CommonJS importing, but resolving it was much, much\\neasier. I probably spent an hour on it this morning, total. That includes\\nlearning a bit about it, adding the relevant VS Code extension and making the\\nchanges.\\n\\nI now have the same two unit tests running. I have fewer custom build components\\n(no Jest transformer, no Babel plugin, no monkey-patching of\\n`React.createElement`).\\n\\nAnd I have to say, there\'s a noticable difference, even with my currently\\ntrivial test suite, in how fast the tests run.\\n\\nI\'m a little disappointed that Docusaurus and Storybook are now on different\\nbuild tools than my tests, but I think the benefits far outweight the\\ndisadvantages. And Storybook supports Vite, so I may migrate it eventually as\\nwell. Unfortunately, Docusaurus is webpack-only for now.\\n\\n## What I learned from all this\\nHow different JS tools and build configurations hang together. This has always\\nbeen a bit of a frustrating thicket to wade into for me, and I feel like I\\nunderstand it just a little better after all this.\\n\\n## How to go about modifying Webpack, Babel, Jest\\nIt hadn\'t really occurred to me before to solve a problem by writing custom\\nextensions, and now I\'ve written them for all three of these tools. It never\\nreally seemed strange to me to write a decorator or addon for Storybook, and I\\ndon\'t know why that should be any different really, but here we are. I guess\\nI\'ve just been conditioned no to mess with the build.\\n\\n## Persistence\\nI\'d never do this in a professional setting, but I\'m glad I chased the Jest\\nsolution down. It was a pretty satisfying feeling to see that \\"2 tests passed\\"\\nafter all the struggle it took to get there.\\n\\n## Give up sooner\\nOkay, that\'s a contradiction. But I guess what I really mean is think outside\\nthe box for another solution. I started with the assumption that \\"Jest is what\\nyou use\\" and it cost me some time, even if it wasn\'t a total loss. I could have\\ngotten to a solution much sooner."},{"id":"/2024/09/16/2024-09-16-fixing-blog-post-truncation/fixing-blog-post-truncation","metadata":{"permalink":"/preview/pr-62/blog/2024/09/16/2024-09-16-fixing-blog-post-truncation/fixing-blog-post-truncation","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-16-fixing-blog-post-truncation/2024-09-16-fixing-blog-post-truncation.mdx","source":"@site/blog/2024-09-16-fixing-blog-post-truncation/2024-09-16-fixing-blog-post-truncation.mdx","title":"Fixing Blog-Post Truncation","description":"It\'s a best-practice in Docusaurus to include a truncation marker in your blog","date":"2024-09-16T16:01:00.000Z","tags":[{"inline":false,"label":"Docusaurus","permalink":"/preview/pr-62/blog/tags/docusaurus","description":"Posts related to working with Docusaurus configuration and components"},{"inline":false,"label":"Trouble-shooting","permalink":"/preview/pr-62/blog/tags/troubleshooting","description":"Posts having to do with solving problems"}],"readingTime":2.265,"hasTruncateMarker":true,"authors":[{"name":"Iain Davis","title":"Software Engineer, Principal @ IainDavis.dev","url":"https://iaindavis.dev","email":"iain@iaindavis.dev","page":{"permalink":"/preview/pr-62/blog/authors/iain"},"socials":{"github":"https://github.com/IainDavis","linkedin":"https://www.linkedin.com/in/iaindavis-dev/","stackoverflow":"https://stackoverflow.com/users/11380293/iaindavis-dev","reddit":"https://www.reddit.com/user/IainDavis-dev/"},"imageURL":"/preview/pr-62/img/authors/idavis.jpg","key":"iain"}],"frontMatter":{"title":"Fixing Blog-Post Truncation","date":"2024-09-16T16:01","authors":["iain"],"tags":["docusaurus","troubleshooting"]},"unlisted":false,"prevItem":{"title":"Getting Set-Up For Unit Tests","permalink":"/preview/pr-62/blog/2024/09/20/2024-09-20-getting-set-up-for-unit-tests/getting-set-up-for-unit-tests"},"nextItem":{"title":"Switching automation providers","permalink":"/preview/pr-62/blog/2024/09/16/2024-09-16-switching-automation-provider/switching-automation-provider"}},"content":"import Columbo from \'./_resources/there-is-just-one-more-thing.webp\'\\n\\nIt\'s a best-practice in Docusaurus to include a truncation marker in your blog\\nposts. That way, when you\'re looking at a list of posts, you just see a brief\\nintroduction from each post, instead of the full content of the first post\\npushing the second post clear off the page.\\n\\nIt\'s where all those \\"Read more\\" links are coming from on the [main page for my blog](/blog).\\n\\nThe default truncation marker for markdown files looks like this:\\n\\n```\\n\x3c!-- truncate --\x3e\\n```\\n\\nTRUNCATE_HERE\\n\\nIf you\'re somebody who\'s looked even a little under the hood of the\\nwebsites you visit, you\'ll recognize that as a simple XML comment. That\'s all well and\\ngood.\\n\\nUntil you try to open that file in VS Code with the MDX plugin installed. Then,\\nyour syntax highlighting looks like this:\\n\\n![Screen shot showing MDX syntax highlighting showing many error-checking false\\npositives](./_resources/truncate-em-i-hardly-know-em.png \\"Yikes.\\");\\n\\nIt\'s distracting, to say the least.\\n\\nLuckily, Docusaurus gives you a mechanism for overriding the default token.\\nThere\'s a property in the presets for the blog plugin that lets you specify the\\ntoken that Docusaurus will use to identify where the summary portion ends:\\n\\n```typescript title=\\"docusaurus.config.ts\\"\\nexport default config: Config = {\\n    presets: {\\n        blog: {\\n            // this is the default for mdx\\n            truncateMarker: /\\\\s\x3c!-- truncate --\x3e\\\\s/\\n            /* other blog configs*/\\n        }\\n        /* other preset configs*/\\n    }\\n    /* other docusaurus configs*/\\n}\\n```\\n\\nSo I updated mine to `TRUNCATE_HERE` (full disclosure, an AI picked the actual\\ntoken to use).\\n\\nThat worked pretty well! All my blogs are nicely truncated on the main blog\\npage, _and_ they don\'t look horrendous in the editor. Cool.\\n\\n| editor     |  main blog page    |\\n|------------|--------------------|\\n| ![screen capture showing corrected view in editor](./_resources/much-better-editor.png)| ![screen capture showing correct view on website](./_resources/much-better-site.png) |\\n\\n\\n:::caution There is just... one more thing\\n<img style={{height: \'200px\'}} src={Columbo}\\n   alt=\\"Freeze frame of Lieutenant Detective Columbo looking disheveled, about\\n   to wreck your whole dastardly plan\\"\\n/>\\n:::\\n\\nEverything looks fine until you actually open the blog post:\\n\\n![Screen capture showing the truncate token still visible in the blog\\npost](./_resources/uhwhut.png)\\n\\nOkay. I can fix this. Can I fix this? I\'m pretty sure I can fix this.\\n\\n\\nIt turns out yes. Yes, I can.\\n\\nThe solution is to add a custom Remark plugin that strips out that line\\nmanually. Me and my friendly neighborhood artificial intelligence sorted it out.\\nIt steered me a bit wrong, but eventually together we were able to sort it out.\\nMuch faster than I\'d have done it on my own, I\'m sure.\\n\\nYou can see the AI transcript\\n[here](https://chatgpt.com/share/66e7d39f-9b30-8000-a12f-a9b8efa5992a) (it\'s\\nquite long, I don\'t actually expect you to look at that, but maybe somebody\'s\\ninterested).\\n\\nAnd my final solution in [the PR](https://github.com/IainDavis/iaindavis.github.io/pull/6)"},{"id":"/2024/09/16/2024-09-16-switching-automation-provider/switching-automation-provider","metadata":{"permalink":"/preview/pr-62/blog/2024/09/16/2024-09-16-switching-automation-provider/switching-automation-provider","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-16-switching-automation-provider/2024-09-16-switching-automation-provider.mdx","source":"@site/blog/2024-09-16-switching-automation-provider/2024-09-16-switching-automation-provider.mdx","title":"Switching automation providers","description":"Yesterday I posted about setting up Zapier to","date":"2024-09-16T11:31:00.000Z","tags":[{"inline":false,"label":"Automation","permalink":"/preview/pr-62/blog/tags/automation","description":"Posts having to do with automating tasks"},{"inline":false,"label":"Cool Services","permalink":"/preview/pr-62/blog/tags/cool-services","description":"Posts about cool services I found"}],"readingTime":1.04,"hasTruncateMarker":true,"authors":[{"name":"Iain Davis","title":"Software Engineer, Principal @ IainDavis.dev","url":"https://iaindavis.dev","email":"iain@iaindavis.dev","page":{"permalink":"/preview/pr-62/blog/authors/iain"},"socials":{"github":"https://github.com/IainDavis","linkedin":"https://www.linkedin.com/in/iaindavis-dev/","stackoverflow":"https://stackoverflow.com/users/11380293/iaindavis-dev","reddit":"https://www.reddit.com/user/IainDavis-dev/"},"imageURL":"/preview/pr-62/img/authors/idavis.jpg","key":"iain"}],"frontMatter":{"title":"Switching automation providers","date":"2024-09-16T11:31","authors":["iain"],"tags":["automation","coolServices"]},"unlisted":false,"prevItem":{"title":"Fixing Blog-Post Truncation","permalink":"/preview/pr-62/blog/2024/09/16/2024-09-16-fixing-blog-post-truncation/fixing-blog-post-truncation"},"nextItem":{"title":"What\'s Next Here?","permalink":"/preview/pr-62/blog/2024/09/15/2024-09-15-whats-next/whats-next"}},"content":"Yesterday I posted about setting up [Zapier](https://zapier.com/app/home) to\\nautomate posting to my LinkedIn profile whenever I create a new post here.\\n\\nI\'ve since looked into alternatives and have moved from Zapier to\\n[Make](https://www.make.com/en).\\n\\nTRUNCATE_HERE\\n\\nWhy switch? Simple: Make is free.\\n\\nWell, okay that may overstate the case. It offers a free tier, which allows 1000\\ninteractions per month. Zapier has no free tier, just a free trial. For me, 1000\\ninteractions a month is well above my needs, so it\'s a good fit.\\n\\nDownsides:\\nZapier seems to have a really nice event-driven thing happening where my posts\\nget migrated more or less immediately. With Make, I have to schedule it. So I\'ve\\ngot it checking 4 times a day at the moment, which means I\'ll have to remember\\nto look out for _this_ post later today to be sure it\'s working as expected. I\\ncan run it manually and that works, so I\'m optimistic.\\n\\nI could tighten up that schedule (the default is 15 minutes) but I don\'t think I\\nneed it polling my RSS feed 48 times a day. Maybe this will leave me room to\\nexplore other automatable tasks.\\n\\nAnyway, little by little, adding value to this page. Here\'s hoping this goes off\\nwithout a hitch."},{"id":"/2024/09/15/2024-09-15-whats-next/whats-next","metadata":{"permalink":"/preview/pr-62/blog/2024/09/15/2024-09-15-whats-next/whats-next","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-15-whats-next/2024-09-15-whats-next.mdx","source":"@site/blog/2024-09-15-whats-next/2024-09-15-whats-next.mdx","title":"What\'s Next Here?","description":"This post is just a listing of some of the things I\'m planning to add here in","date":"2024-09-15T14:48:00.000Z","tags":[{"inline":false,"label":"Custom Docusaurus Components","permalink":"/preview/pr-62/blog/tags/custom-components","description":"Posts to do with components I\'ve developed to extend Docusaurus functionallity"},{"inline":false,"label":"Automation","permalink":"/preview/pr-62/blog/tags/automation","description":"Posts having to do with automating tasks"}],"readingTime":4.785,"hasTruncateMarker":true,"authors":[{"name":"Iain Davis","title":"Software Engineer, Principal @ IainDavis.dev","url":"https://iaindavis.dev","email":"iain@iaindavis.dev","page":{"permalink":"/preview/pr-62/blog/authors/iain"},"socials":{"github":"https://github.com/IainDavis","linkedin":"https://www.linkedin.com/in/iaindavis-dev/","stackoverflow":"https://stackoverflow.com/users/11380293/iaindavis-dev","reddit":"https://www.reddit.com/user/IainDavis-dev/"},"imageURL":"/preview/pr-62/img/authors/idavis.jpg","key":"iain"}],"frontMatter":{"title":"What\'s Next Here?","date":"2024-09-15T14:48","authors":["iain"],"tags":["customComponents","automation"]},"unlisted":false,"prevItem":{"title":"Switching automation providers","permalink":"/preview/pr-62/blog/2024/09/16/2024-09-16-switching-automation-provider/switching-automation-provider"},"nextItem":{"title":"How I Automated My LinkedIn Posts","permalink":"/preview/pr-62/blog/2024/09/15/2024-09-15-automating-linkedin-posts/automating-linkedin-posts"}},"content":"This post is just a listing of some of the things I\'m planning to add here in\\nthe coming days.\\n\\nTRUNCATE_HERE\\n\\n## Content\\n### Front Page\\nThat front page is pretty spare, hey? Right now it\'s just the default Docusaurus\\npage with all their branding stripped out. I\'ve got to decide what I\'m going to\\nput there. It\'s a lot of real estate to fill.\\n\\n### Footer\\nI\'ve got some idea what I want to do here, at least. I\'ll have to include my\\nlinked-in social card at a minimum. Will probably also put up a GitHub card of\\nsome kind, and my CodeWars badge. Not sure what all yet. I\'ll have some time to\\nthink about it\\n\\n### Pages\\n#### Bio\\nNeed a bio page for sure. I\'m anticipating just regurgitation my LinkedIn bio,\\nbut I may add some additional sub-pages to share a little bit about me outside\\nof my working persona. Haven\'t decided yet if that\'s A) appropriate and B) work\\nI want to do\\n\\n#### Projects\\nTechnically there\'s a projects page now, but there\'s not much on it. Ultimately,\\nthis page was the root cause for creating this whole website, but then I kind of\\nstopped working on projects to create this website. This website BECAME the\\nproject. There will be a page for this there soon, at least.\\n\\n#### Kata\\nI figure if I\'m doing these kata to keep my language fluency up, maybe they\'ll\\nbe useful as a demo too. Show a potential employer that I can write nice tidy\\ncode. I also have a notion to include a section for Design kata, which I\'m new\\nto. They seem less structured and less easy to share out in a regular format,\\nbut maybe that\'s good. Anyway, looking forward to putting something up here.\\n\\n### Support\\nI don\'t think anyone\'s likely to _need_ support from me _yet_. But I do hope\\neventually somebody might want to use some of the custom components I\'m working\\non. I\'ve been organizaing my personal work in Jira, so I\'ll include a widget\\nhere to submit requests. I don\'t think I\'m ambitious enough to include a Slack\\ninterface, but we\'ll see how I feel when I start in.\\n\\n## Infrastructure\\n### Process\\nProbably about time I protected my `main` branch and stopped pushing directly to\\nit. PRs, from now on. Oh! And I need to make my repository public, so I can\\nshare it on the Projects page.\\n\\n### Tests!\\nI\'ve had a couple of abortive attempts to introduce Jest and use my Storybook\\nstories as the basis for the first tests. So far that hasn\'t worked out so well.\\nMostly it\'s had to do with imports. Both Docusaurus and Storybook rely on a lot\\nof preprocessing, and getting Jest configured to keep step with them has been a\\nbit of a headache. I was actually on the verge of abandoning Storybook\\naltogether, but I\'ve decided it still serves nicely as a showcase, and home for\\nthe individual components\'s documentation. Solving that SVG issue I mentioned in\\na previous blog post helped too.\\n\\nI also want to use this as a chance to explore Playwright. I\'ve used it only\\nvery briefly before when I contributed to someone else\'s project that was using\\nit. I like Cypress a lot, but I definitely prefer Playwright in one regard: it\\nlets you use standard JavaScript idioms, where Cypress traps you in their very\\na-typical world that is similar to working with Promises, but predates promises,\\nso it has it\'s own idioms that require learning.\\n\\nLast, I think I\'ll probably explore what Storybook can do for me as a test\\nplatform all by itself (in the absence of Jest).\\n\\n### Refactoring\\nMy Logo Storybook stories are looking about how I want them, but there\'s a lot\\nof boilerplate in the story definition file to make that happen. I think I may\\nextract that all out to a component just for the sake of tidiness.\\n\\n### Fixes\\nBy default, Docusaurus uses a token that looks like this:\\n```\\n\x3c!-- truncate --\x3e\\n```\\nto indicate where a blog post should be truncated when you\'re viewing it as part\\nof a list of all posts. Unfortunately, that breaks the Visual Studio MDX parser\\nquite badly. The code still compiles and displays just fine, but Visual Studio\\nshouts at me that the whole file after that point is riddled with errors, which\\nis distracting, and bad, and potentially hides other problems I should know\\nabout.\\n\\nI discovered there\'s a mechanism to redefine that token in the docusaurus config\\nfile, so I\'ve changed it to `TRUNCATE_HERE`, which is working beautifully,\\nexcept that it still shows up in the document content now, which is not a great\\nlook.\\n\\nSo I\'ll have to figure out some way of masking that from the displayed content\\nthat _isn\'t_ an XML comment. Maybe I can wrap it in a &lt;div> and use CSS to\\nhide it? That\'s a lot of text to type for every blog post though. Will have to\\ncreate a snippet. Anyway, it\'s worth exploring.\\n\\n### Automation\\nI\'m currently using the provided `docusaurus deploy` command to push my built\\nsite to GitHub Pages. Sometime in the next week or two, I want to get that\\nchanged over to a GitHub actions flow, so that the definitions in my `main`\\nbranch and the published site are in sync. In that build, I also plan to:\\n* run tests\\n* publish a test/coverage report to the website\\n* migrate the global docusaurus styles for Storybook\\n\\nI\'m sure I\'m probably forgetting something either that\'s already in my Jira or\\nthat I\'ve thought of while working on something else and forgot to write down.\\nI\'m sure eventually something will prompt my memory."},{"id":"/2024/09/15/2024-09-15-automating-linkedin-posts/automating-linkedin-posts","metadata":{"permalink":"/preview/pr-62/blog/2024/09/15/2024-09-15-automating-linkedin-posts/automating-linkedin-posts","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-15-automating-linkedin-posts/2024-09-15-automating-linkedin-posts.mdx","source":"@site/blog/2024-09-15-automating-linkedin-posts/2024-09-15-automating-linkedin-posts.mdx","title":"How I Automated My LinkedIn Posts","description":"One of the first things my outplacement coach told me was that I ought to be","date":"2024-09-15T12:56:00.000Z","tags":[{"inline":false,"label":"LinkedIn","permalink":"/preview/pr-62/blog/tags/linkedin","description":"Posts related to my LinkedIn presence"},{"inline":false,"label":"Automation","permalink":"/preview/pr-62/blog/tags/automation","description":"Posts having to do with automating tasks"},{"inline":false,"label":"Cool Services","permalink":"/preview/pr-62/blog/tags/cool-services","description":"Posts about cool services I found"}],"readingTime":1.52,"hasTruncateMarker":true,"authors":[{"name":"Iain Davis","title":"Software Engineer, Principal @ IainDavis.dev","url":"https://iaindavis.dev","email":"iain@iaindavis.dev","page":{"permalink":"/preview/pr-62/blog/authors/iain"},"socials":{"github":"https://github.com/IainDavis","linkedin":"https://www.linkedin.com/in/iaindavis-dev/","stackoverflow":"https://stackoverflow.com/users/11380293/iaindavis-dev","reddit":"https://www.reddit.com/user/IainDavis-dev/"},"imageURL":"/preview/pr-62/img/authors/idavis.jpg","key":"iain"}],"frontMatter":{"title":"How I Automated My LinkedIn Posts","date":"2024-09-15T12:56","authors":["iain"],"tags":["linkedin","automation","coolServices"],"image":"/img/logo/logo-compact-square-dark.svg"},"unlisted":false,"prevItem":{"title":"What\'s Next Here?","permalink":"/preview/pr-62/blog/2024/09/15/2024-09-15-whats-next/whats-next"},"nextItem":{"title":"Fixing Diffs","permalink":"/preview/pr-62/blog/2024/09/15/2024-09-15-fixing-diffs/fixing-diffs"}},"content":"One of the first things my outplacement coach told me was that I ought to be\\nposting to LinkedIn regularly. I knew I wanted to have updates specific to this\\nwebsite here on my blog, and I figured I\'d just have to cross-post them\\nmanually.\\n\\nIt turns out that\'s not so!\\n\\nTRUNCATE_HERE\\n\\nThe Docusaurus plugin that is behind this blog natively provides the option to generate\\nan RSS feed. I did some exploration and found that LinkedIn actually supports\\n_consuming_ an RSS feed and generating posts from it natively! Hey, that\'s\\ngreat! Problem solved!\\n\\n(My RSS feed is [here](https://iaindavis.dev/blog/rss), if you\'re interested)\\n\\nExcept LinkedIn supports consuming RSS feeds natively **if** you have a business\\npage. I\'m not a business. I\'m just some guy. And I really don\'t want more LinkedIn\\nmanagement on my plate.\\n\\nI figured somebody had probably licked this problem before, and I was right!\\n\\nCheck out [Zapier](https://zapier.com/app/home). They offer no-code\\nconfiguration for automating tasks. You configure a trigger (new content in my\\nRSS feed), an action (share it to LinkedIn), and provide any necessary\\ncredentials/authorizations and you\'re off and running. Anytime you see a\\nLinkedIn post from prefixed \\"Latest from my developer blog:\\" that\'s exactly\\nwhat\'s happened.\\n\\n![Screen shot showing Zapier editor with a post-to-LinkedIn-from-RSS Zap in the\\neditor pane][./_resources/zapier-screenshot.png]\\n\\nI\'m on the free trial right now. For my purposes I\'m not sure it\'s going to be\\nworth the $20 USD/month price tag. But maybe I can find an alternative, or\\nfigure out how to do something similar myself with APIs.\\n\\nIf you have a business that\'s producing income, maybe $20 USD is worth it to\\nyou.\\n\\nAlso, if you\'re getting spammed by me, I promise this content will slow down.\\nI\'ve been trying to catch up documenting the things I\'ve done over the last few\\nweeks.\\n\\n\\nThat\'s all for now!"},{"id":"/2024/09/15/2024-09-15-fixing-diffs/fixing-diffs","metadata":{"permalink":"/preview/pr-62/blog/2024/09/15/2024-09-15-fixing-diffs/fixing-diffs","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-15-fixing-diffs/2024-09-15-fixing-diffs.mdx","source":"@site/blog/2024-09-15-fixing-diffs/2024-09-15-fixing-diffs.mdx","title":"Fixing Diffs","description":"In my last blog post, I used a diff to show how my SVG files had changed.","date":"2024-09-15T11:47:00.000Z","tags":[{"inline":false,"label":"Docusaurus","permalink":"/preview/pr-62/blog/tags/docusaurus","description":"Posts related to working with Docusaurus configuration and components"},{"inline":false,"label":"Formatting/Styles/CSS","permalink":"/preview/pr-62/blog/tags/formatting","description":"Posts to do with configuring styles and formatting"}],"readingTime":3.695,"hasTruncateMarker":true,"authors":[{"name":"Iain Davis","title":"Software Engineer, Principal @ IainDavis.dev","url":"https://iaindavis.dev","email":"iain@iaindavis.dev","page":{"permalink":"/preview/pr-62/blog/authors/iain"},"socials":{"github":"https://github.com/IainDavis","linkedin":"https://www.linkedin.com/in/iaindavis-dev/","stackoverflow":"https://stackoverflow.com/users/11380293/iaindavis-dev","reddit":"https://www.reddit.com/user/IainDavis-dev/"},"imageURL":"/preview/pr-62/img/authors/idavis.jpg","key":"iain"}],"frontMatter":{"title":"Fixing Diffs","date":"2024-09-15T11:47","authors":["iain"],"image":"/img/logo/logo-compact-square-dark.svg","tags":["docusaurus","formatting"]},"unlisted":false,"prevItem":{"title":"How I Automated My LinkedIn Posts","permalink":"/preview/pr-62/blog/2024/09/15/2024-09-15-automating-linkedin-posts/automating-linkedin-posts"},"nextItem":{"title":"Making My Logo a Component","permalink":"/preview/pr-62/blog/2024/09/15/2024-09-15-logo-component/logo-component"}},"content":"In my last blog post, I used a diff to show how my SVG files had changed.\\n\\nFor those who don\'t know a diff is an operation on two files that shows a graphical representation of how one is different than the other.\\n\\nThey look like this:\\n| on the command line  | in a nice UI like GitHub |\\n| -------------------  | ------------------------ |\\n| ![Screen capture showing a command-line diff](./_resources/small_command_line_diff.png) | ![Screen capture showing a diff in GitHub](./_resources/old_git_diff.png) |\\n\\nTRUNCATE_HERE\\n\\nThe green lines show something being added, the red ones something\\nbeing removed. A change to a line will produce a red line AND a green\\nline in the output.\\n\\nIn theory, Docusaurs supports a notation to produce nicely formatted diff\\noutput.\\n\\nIndeed, in my VS Code editor, the lines prefixed with \'+\' were highlighted\\ngreen, and the ones prefixed with \'-\' were highlighted red. But in the rendered\\npage, there was no change from a standard code block:\\n\\n| editor: right! | where it matters: wrong! |\\n| -------------- | ------------------------ |\\n| ![Screen capture showing appropriate line-coloring in editor](./_screengrabs/right.png \\"Yay!\\") | ![Screen capture showing no line-coloring in rendered website](./_screengrabs/wrong.png \\"Dang.\\") |\\n\\nI\'m not the first to run into this problem (and in fact it\'s not the first time\\nI\'ve run into it).\\n\\nI found [this solution][credit-where-its-due] online:\\n\\nDocusaurus relies on a library called \'Prism\' for its syntax highlighting, and\\nPrism includes a feature called \'magic comments\'. If you define a magic comment,\\nand then include that magic comment in your code blocks, prism will remove it\\nfrom the output and apply a CSS class to the next line, which you can use to\\napply formatting. Docusaurus allows you to modify the Prism configuration (including\\nmagic comments) from within its own configuration file.\\n\\nApplied to my repository, it looks like this:\\n\\n### Definition of magic comments:\\n```typescript title=docusaurus.config.ts\\nconst config: Config = {\\n    // ... other docusaurus configuration options\\n  themeConfig: {\\n    // Replace with your project\'s social card\\n    // ... other theming configuration\\n    prism: {\\n        // ... other prism configuration\\n        // diff-add\\n      magicComments: [\\n        // diff-add\\n        {\\n        // diff-add\\n          className: \'code-block-diff-add-line\',\\n        // diff-add\\n          line: \'diff-add\',\\n        // diff-add\\n        },\\n        // diff-add\\n        {\\n        // diff-add\\n          className: \'code-block-diff-remove-line\',\\n        // diff-add\\n          line: \'diff-remove\'\\n        // diff-add\\n        }\\n        // diff-add\\n      ]\\n        // diff-add\\n    },\\n        // diff-add\\n  } ,\\n        // diff-add\\n};\\n```\\n\\nadding variables and styles to my global style definitions:\\n```css title=src/css/custom.css\\n:root {\\n/* ...existing light-theme (default) variable defs styles... */\\n  // diff-add\\n  --iaindavisdev-diff-insertion: #b0f6ac;\\n  // diff-add\\n  --iaindavisdev-diff-deletion: #fcc8c0;\\n}\\n\\n/* For readability concerns, you should choose a lighter palette in dark mode. */\\n[data-theme=\'dark\'] {\\n    /* ...existing dark-theme variable defs styles... */\\n  // diff-add\\n  --iaindavisdev-diff-insertion: #254323;\\n  // diff-add\\n  --iaindavisdev-diff-deletion: #432723;\\n}\\n\\n/* new styles! */\\n// diff-add\\n.code-block-diff-add-line {\\n// diff-add\\n  background-color: var(--iaindavisdev-diff-insertion);\\n// diff-add\\n  display: block;\\n// diff-add\\n  margin: 0 -40px;\\n// diff-add\\n  padding: 0 40px;\\n// diff-add\\n}\\n// diff-add\\n\\n// diff-add\\n.code-block-diff-add-line::before {\\n// diff-add\\n  position: absolute;\\n// diff-add\\n  left: 8px;\\n// diff-add\\n  padding-right: 8px;\\n// diff-add\\n  content: \'+\';\\n// diff-add\\n}\\n// diff-add\\n\\n// diff-add\\n.code-block-diff-remove-line {\\n// diff-add\\n  background-color: var(--iaindavisdev-diff-deletion);\\n// diff-add\\n  display: block;\\n// diff-add\\n  margin: 0 -40px;\\n// diff-add\\n  padding: 0 40px;\\n// diff-add\\n}\\n// diff-add\\n\\n// diff-add\\n.code-block-diff-remove-line::before {\\n// diff-add\\n  position: absolute;\\n// diff-add\\n  left: 8px;\\n// diff-add\\n  padding-right: 8px;\\n// diff-add\\n  content: \'-\';\\n// diff-add\\n}\\n// diff-add\\n\\n// diff-add\\n/**\\n// diff-add\\n * use magic comments to mark diff blocks\\n// diff-add\\n */\\n// diff-add\\npre code:has(.code-block-diff-add-line) {\\n// diff-add\\n  padding-left: 40px!important;\\n// diff-add\\n}\\n// diff-add\\n\\n// diff-add\\npre code:has(.code-block-diff-remove-line) {\\n// diff-add\\n  padding-left: 40px!important;\\n// diff-add\\n}\\n```\\n\\nAnd you can see the result in this post.\\n\\nThere\'s an added bonus: my code blocks now retain their _original_ syntax\\nhighlighting as well as adding the diff highlights. In the default Docusaurus\\ndiff highlighting, all formatting is stripped out except for the diff\\nhighlights, unless you\'re willing to do some more work to shoehorn some more of\\nprism\'s native capabilities in to Docusaurus.\\n\\nOn the down-side, in the editor now, those blocks are littered with kind of\\nobnoxious comments that make it harder to read. Eventually, I will probably\\nimplement [this more robust fix][ooh-even-better-but-also-harder] (from the same\\nthread as the quick-fix I\'ve applied!):\\n\\nFor now, this was a solution I can implement (and document here) much more\\nquickly, so I\'m happy with it for today.\\n\\n[credit-where-its-due]:\\n    https://github.com/facebook/docusaurus/issues/3318#issuecomment-1909563681 \\"\'Magic Comments\' fix\\"\\n\\n[ooh-even-better-but-also-harder]:\\n    https://github.com/facebook/docusaurus/issues/3318#issuecomment-2065547731 \\"More robust Prism-renderer fix\\""},{"id":"/2024/09/15/2024-09-15-logo-component/logo-component","metadata":{"permalink":"/preview/pr-62/blog/2024/09/15/2024-09-15-logo-component/logo-component","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-15-logo-component/2024-09-15-logo-component.mdx","source":"@site/blog/2024-09-15-logo-component/2024-09-15-logo-component.mdx","title":"Making My Logo a Component","description":"After creating my logo, I wanted to turn it into a re-usable React component","date":"2024-09-15T10:34:00.000Z","tags":[{"inline":false,"label":"SVG","permalink":"/preview/pr-62/blog/tags/svg","description":"Posts to do with the SVG format"},{"inline":false,"label":"React","permalink":"/preview/pr-62/blog/tags/react","description":"Posts to do with the React ecosystem"},{"inline":false,"label":"My Brand","permalink":"/preview/pr-62/blog/tags/brand","description":"Posts to do with developing my personal brand"},{"inline":false,"label":"Graphics, Icons & Logos","permalink":"/preview/pr-62/blog/tags/graphics","description":"Posts to do with created visual elements"},{"inline":false,"label":"Custom Docusaurus Components","permalink":"/preview/pr-62/blog/tags/custom-components","description":"Posts to do with components I\'ve developed to extend Docusaurus functionallity"}],"readingTime":5.85,"hasTruncateMarker":true,"authors":[{"name":"Iain Davis","title":"Software Engineer, Principal @ IainDavis.dev","url":"https://iaindavis.dev","email":"iain@iaindavis.dev","page":{"permalink":"/preview/pr-62/blog/authors/iain"},"socials":{"github":"https://github.com/IainDavis","linkedin":"https://www.linkedin.com/in/iaindavis-dev/","stackoverflow":"https://stackoverflow.com/users/11380293/iaindavis-dev","reddit":"https://www.reddit.com/user/IainDavis-dev/"},"imageURL":"/preview/pr-62/img/authors/idavis.jpg","key":"iain"}],"frontMatter":{"title":"Making My Logo a Component","date":"2024-09-15T10:34","authors":["iain"],"image":"/img/logo-compact-square-dark.svg","tags":["svg","react","brand","graphics","customComponents"]},"unlisted":false,"prevItem":{"title":"Fixing Diffs","permalink":"/preview/pr-62/blog/2024/09/15/2024-09-15-fixing-diffs/fixing-diffs"},"nextItem":{"title":"Impromptu Brand Work","permalink":"/preview/pr-62/blog/2024/09/14/2024-09-14-impromptu-brand-work/impromptu-brand-work"}},"content":"import Logo from \'@site/src/components/brand/Logo/Logo\';\\n\\nexport const fieldStyle = {\\n    background: \'gray\',\\n    padding: \'2em\'\\n}\\n\\nexport const Expanded = () => (\\n    <div style={fieldStyle}>\\n        <Logo />\\n    </div>\\n)\\n\\nexport const Compact = () => (\\n    <div style={fieldStyle}>\\n        <Logo variant=\'compact\'/>\\n    </div>\\n)\\n\\nexport const CompactSquare = () => (\\n    <div style={fieldStyle}>\\n        <Logo variant=\'compact-square\'/>\\n    </div>\\n)\\n\\nAfter creating my logo, I wanted to turn it into a re-usable React component\\nthat would respond to theming, and let the logo variant be controllable by\\nproperties, so that essentially, I would only need one component that I could\\nuse wherever I wanted a logo\\n\\n\\n### Variants\\n| expanded    | compact    | compactSquare    |\\n| ----------- | ---------- | -----------------|\\n| <Expanded/> | <Compact/> | <CompactSquare/> |\\n\\nTRUNCATE_HERE\\n\\nInitially, I had one SVG for each variant, in the light and dark theme. I\\nimported all of them (about ten .SVG files) and used JavaScript logic\\nto choose between them. To apply my themes, I was using Docusaurus\'\\nprovided\\n[`ThemedImage`](https://docusaurus.io/docs/markdown-features/assets#themed-images)\\ncomponent.\\n\\nThat\'s where the trouble started.\\n\\n```javascript ThemedImage\\nimport useBaseUrl from \'@docusaurus/useBaseUrl\';\\nimport ThemedImage from \'@theme/ThemedImage\';\\n\\n<ThemedImage\\n  alt=\\"Docusaurus themed image\\"\\n  sources={{\\n    light: useBaseUrl(\'/img/docusaurus_light.svg\'),\\n    dark: useBaseUrl(\'/img/docusaurus_dark.svg\'),\\n  }}\\n/>;\\n```\\n\\nThose imports at the top are well and good in Docusaurus (and Storybook, it\\nturns out) but when I tried to run my Storybook stories through Jest, those\\nimports failed, sending me on a journey of redefining aliases and configuring\\npreprocessors. I never did find the right combination of aliases definitions,\\nand some of the docusaurus dependencies seem to rely on _different paths_ for\\nthe same alias. It\'s entirely possible I\'m misunderstanding what was going on,\\nbecause I stopped trying to solve that problem before I ever licked it (and\\nwhile I still had some hair\\nleft).\\n\\nSo, what I need then is a way to accomplish the same thing, but without any\\nnested Docusaurus dependencies. I couldn\'t even programatically detect the\\ntheme, because _that_ logic is in a React hook which is also defined in\\nDocusaurus dependencies, and I really didn\'t want to reinvent that wheel.\\n\\nIt occurred to me that SVG files are stylable with CSS. I\'d never done it\\nbefore, and I wasn\'t sure how it would go with CSS Modules, but I figured it was\\nworth a shot.\\n\\n\\nFirst I had to generalize all my SVG files by removing the \\"fill\\" attributes and\\nreplace them with \'data-fill\' attributes, that I can use as selectors in my CSS:\\n```svg logo-expanded-dark.svg -> logo-expanded-generic.svg\\n<svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"180\\" height=\\"50\\" fill=\\"none\\" viewBox=\\"0 0 180 50\\">\\n   // diff-remove\\n   <rect width=\\"180\\" height=\\"50\\" fill=\\"#1F1F1F\\" rx=\\"8\\"/>\\n   // diff-add\\n   <rect width=\\"180\\" height=\\"50\\" data-fill=\\"background\\" rx=\\"8\\"/>\\n   // diff-remove\\n   <path fill=\\"#1F1F1F\\" d=\\"M10 9.76h130v30H10v-30Zm157 15a8 8 0 1 1-16 0 8 8 0 0 1 16 0Z\\"/>\\n   // diff-remove\\n   <path fill=\\"#569CD6\\" fill-rule=\\"evenodd\\" d=\\"M8.5 8.26h133V23.5h9.599a8.001 8.001 0 1 1 .091 3h-9.69v14.76H8.5v-33Zm3 3v27h127v-27h-127ZM159 29.76a5 5 0 1 0 0-10 5 5 0 0 0 0 10Z\\" clip-rule=\\"evenodd\\"/>\\n   // diff-remove\\n   <path fill=\\"#4EC9B0\\" d=\\"M150.196 14.88c-.656 0-1.188-.228-1.596-.684-.4-.456-.6-1.068-.6-1.836v-1.788c0-.776.2-1.392.6-1.848.4-.456.932-.684 1.596-.684.544 0 .976.156 1.296.468.32.304.48.724.48 1.26l-.336-.348h.348l-.048-1.572V6h1.5v8.76h-1.464V13.5h-.336l.336-.348c0 .536-.16.96-.48 1.272-.32.304-.752.456-1.296.456Zm.528-1.296c.384 0 .68-.112.888-.336.216-.232.324-.552.324-.96v-1.656c0-.408-.108-.724-.324-.948-.208-.232-.504-.348-.888-.348s-.684.112-.9.336c-.216.224-.324.544-.324.96v1.656c0 .416.108.736.324.96.216.224.516.336.9.336Zm7.243 1.296c-.56 0-1.048-.108-1.464-.324a2.402 2.402 0 0 1-.972-.9c-.224-.392-.336-.848-.336-1.368v-1.656c0-.52.112-.972.336-1.356.232-.392.556-.696.972-.912.416-.216.904-.324 1.464-.324.552 0 1.032.108 1.44.324.416.216.736.52.96.912.232.384.348.836.348 1.356v1.188h-4.068v.468c0 .464.112.816.336 1.056.224.232.556.348.996.348.336 0 .608-.056.816-.168a.801.801 0 0 0 .396-.516h1.476c-.112.568-.416 1.024-.912 1.368-.488.336-1.084.504-1.788.504Zm1.296-3.9v-.36c0-.456-.108-.804-.324-1.044-.216-.248-.54-.372-.972-.372-.432 0-.76.124-.984.372-.224.248-.336.6-.336 1.056v.252l2.724-.024-.108.12Zm4.928 3.78-2.172-6.6h1.536l1.26 4.008c.072.24.14.488.204.744.072.256.124.46.156.612.04-.152.092-.356.156-.612s.128-.5.192-.732l1.236-4.02h1.524l-2.16 6.6h-1.932Z\\"/>\\n   // diff-remove\\n   <path fill=\\"#CE9178\\" d=\\"M19.89 32.76v-2.31h3.087V19.74H19.89v-2.31h8.82v2.31h-3.087v10.71h3.087v2.31h-8.82Zm15.72.21c-1.19 0-2.127-.315-2.813-.945-.686-.63-1.03-1.477-1.03-2.541 0-1.134.379-2.009 1.135-2.625.756-.616 1.827-.924 3.213-.924h2.877v-.987c0-.56-.182-.994-.546-1.302-.364-.322-.861-.483-1.491-.483-.574 0-1.05.126-1.428.378a1.476 1.476 0 0 0-.672 1.029h-2.562c.126-1.092.616-1.96 1.47-2.604.854-.644 1.946-.966 3.276-.966 1.414 0 2.527.357 3.339 1.071.826.7 1.239 1.652 1.239 2.856v7.833h-2.541v-2.016h-.42l.42-.567c0 .854-.315 1.533-.945 2.037-.63.504-1.47.756-2.52.756Zm.862-1.974c.742 0 1.344-.189 1.806-.567.476-.378.714-.868.714-1.47v-1.407h-2.835c-.532 0-.96.154-1.281.462-.322.308-.483.714-.483 1.218 0 .546.182.98.546 1.302.378.308.889.462 1.533.462Zm8.308 1.764v-2.394h4.032v-6.783h-3.507V21.21h6.027v9.156h3.57v2.394H44.78Zm5.082-13.482c-.532 0-.952-.133-1.26-.399-.308-.28-.462-.651-.462-1.113 0-.462.154-.826.462-1.092.308-.28.728-.42 1.26-.42s.952.14 1.26.42c.308.266.462.63.462 1.092 0 .462-.154.833-.462 1.113-.308.266-.728.399-1.26.399Zm7.53 13.482V21.21h2.562v2.205h.714l-.714.609c0-.952.273-1.694.82-2.226.56-.532 1.322-.798 2.288-.798 1.134 0 2.037.378 2.71 1.134.685.756 1.028 1.771 1.028 3.045v7.581h-2.625v-7.308c0-.7-.182-1.239-.546-1.617-.364-.378-.875-.567-1.533-.567-.644 0-1.155.196-1.533.588-.364.392-.546.952-.546 1.68v7.224h-2.625Zm12.55 0V17.43H74.5c1.036 0 1.932.196 2.688.588.77.392 1.365.945 1.785 1.659.42.714.63 1.561.63 2.541v5.733c0 .966-.21 1.813-.63 2.541a4.401 4.401 0 0 1-1.785 1.68c-.756.392-1.652.588-2.688.588h-4.557Zm2.625-2.415H74.5c.756 0 1.358-.21 1.806-.63.448-.434.672-1.022.672-1.764v-5.733c0-.728-.224-1.302-.672-1.722-.448-.434-1.05-.651-1.806-.651h-1.932v10.5Zm13.411 2.625c-1.19 0-2.128-.315-2.814-.945-.686-.63-1.029-1.477-1.029-2.541 0-1.134.378-2.009 1.134-2.625.756-.616 1.827-.924 3.213-.924h2.877v-.987c0-.56-.182-.994-.546-1.302-.364-.322-.861-.483-1.491-.483-.574 0-1.05.126-1.428.378a1.476 1.476 0 0 0-.672 1.029H82.66c.126-1.092.616-1.96 1.47-2.604.854-.644 1.946-.966 3.276-.966 1.414 0 2.527.357 3.339 1.071.826.7 1.239 1.652 1.239 2.856v7.833h-2.541v-2.016h-.42l.42-.567c0 .854-.315 1.533-.945 2.037-.63.504-1.47.756-2.52.756Zm.861-1.974c.742 0 1.344-.189 1.806-.567.476-.378.714-.868.714-1.47v-1.407h-2.835c-.532 0-.959.154-1.281.462-.322.308-.483.714-.483 1.218 0 .546.182.98.546 1.302.378.308.889.462 1.533.462ZM98.17 32.76l-3.8-11.55h2.688l2.205 7.014c.126.42.245.854.357 1.302.126.448.217.805.273 1.071.07-.266.161-.623.273-1.071.112-.448.224-.875.336-1.281l2.163-7.035h2.667l-3.78 11.55h-3.381Zm9.569 0v-2.394h4.032v-6.783h-3.507V21.21h6.027v9.156h3.57v2.394h-10.122Zm5.082-13.482c-.532 0-.952-.133-1.26-.399-.308-.28-.462-.651-.462-1.113 0-.462.154-.826.462-1.092.308-.28.728-.42 1.26-.42s.952.14 1.26.42c.308.266.462.63.462 1.092 0 .462-.154.833-.462 1.113-.308.266-.728.399-1.26.399Zm11.772 13.671c-.882 0-1.652-.14-2.31-.42-.658-.28-1.176-.665-1.554-1.155-.364-.504-.56-1.092-.588-1.764h2.625c.028.364.203.658.525.882.336.224.77.336 1.302.336h.924c.644 0 1.127-.126 1.449-.378.322-.252.483-.595.483-1.029 0-.406-.147-.721-.441-.945-.28-.238-.721-.392-1.323-.462l-1.428-.21c-1.316-.182-2.282-.532-2.898-1.05-.616-.518-.924-1.295-.924-2.331 0-1.078.364-1.911 1.092-2.499.728-.602 1.799-.903 3.213-.903h.798c1.288 0 2.317.287 3.087.861.77.574 1.183 1.344 1.239 2.31h-2.625c-.042-.308-.217-.56-.525-.756-.294-.196-.686-.294-1.176-.294h-.798c-.602 0-1.043.112-1.323.336-.266.21-.399.525-.399.945 0 .392.119.686.357.882.238.182.623.315 1.155.399l1.491.21c1.372.196 2.38.567 3.024 1.113.658.532.987 1.323.987 2.373 0 1.12-.385 1.995-1.155 2.625-.756.616-1.876.924-3.36.924h-.924Z\\"/>\\n   // diff-add\\n   <path data-fill=\\"background\\" d=\\"M10 9.76h130v30H10v-30Zm157 15a8 8 0 1 1-16 0 8 8 0 0 1 16 0Z\\"/>\\n   // diff-add\\n   <path data-fill=\\"border\\" fill-rule=\\"evenodd\\" d=\\"M8.5 8.26h133V23.5h9.599a8.001 8.001 0 1 1 .091 3h-9.69v14.76H8.5v-33Zm3 3v27h127v-27h-127ZM159 29.76a5 5 0 1 0 0-10 5 5 0 0 0 0 10Z\\" clip-rule=\\"evenodd\\"/>\\n   // diff-add\\n   <path data-fill=\\"text-accent\\" d=\\"M150.196 14.88c-.656 0-1.188-.228-1.596-.684-.4-.456-.6-1.068-.6-1.836v-1.788c0-.776.2-1.392.6-1.848.4-.456.932-.684 1.596-.684.544 0 .976.156 1.296.468.32.304.48.724.48 1.26l-.336-.348h.348l-.048-1.572V6h1.5v8.76h-1.464V13.5h-.336l.336-.348c0 .536-.16.96-.48 1.272-.32.304-.752.456-1.296.456Zm.528-1.296c.384 0 .68-.112.888-.336.216-.232.324-.552.324-.96v-1.656c0-.408-.108-.724-.324-.948-.208-.232-.504-.348-.888-.348s-.684.112-.9.336c-.216.224-.324.544-.324.96v1.656c0 .416.108.736.324.96.216.224.516.336.9.336Zm7.243 1.296c-.56 0-1.048-.108-1.464-.324a2.402 2.402 0 0 1-.972-.9c-.224-.392-.336-.848-.336-1.368v-1.656c0-.52.112-.972.336-1.356.232-.392.556-.696.972-.912.416-.216.904-.324 1.464-.324.552 0 1.032.108 1.44.324.416.216.736.52.96.912.232.384.348.836.348 1.356v1.188h-4.068v.468c0 .464.112.816.336 1.056.224.232.556.348.996.348.336 0 .608-.056.816-.168a.801.801 0 0 0 .396-.516h1.476c-.112.568-.416 1.024-.912 1.368-.488.336-1.084.504-1.788.504Zm1.296-3.9v-.36c0-.456-.108-.804-.324-1.044-.216-.248-.54-.372-.972-.372-.432 0-.76.124-.984.372-.224.248-.336.6-.336 1.056v.252l2.724-.024-.108.12Zm4.928 3.78-2.172-6.6h1.536l1.26 4.008c.072.24.14.488.204.744.072.256.124.46.156.612.04-.152.092-.356.156-.612s.128-.5.192-.732l1.236-4.02h1.524l-2.16 6.6h-1.932Z\\"/>\\n   // diff-add\\n   <path data-fill=\\"text-main\\" d=\\"M19.89 32.76v-2.31h3.087V19.74H19.89v-2.31h8.82v2.31h-3.087v10.71h3.087v2.31h-8.82Zm15.72.21c-1.19 0-2.127-.315-2.813-.945-.686-.63-1.03-1.477-1.03-2.541 0-1.134.379-2.009 1.135-2.625.756-.616 1.827-.924 3.213-.924h2.877v-.987c0-.56-.182-.994-.546-1.302-.364-.322-.861-.483-1.491-.483-.574 0-1.05.126-1.428.378a1.476 1.476 0 0 0-.672 1.029h-2.562c.126-1.092.616-1.96 1.47-2.604.854-.644 1.946-.966 3.276-.966 1.414 0 2.527.357 3.339 1.071.826.7 1.239 1.652 1.239 2.856v7.833h-2.541v-2.016h-.42l.42-.567c0 .854-.315 1.533-.945 2.037-.63.504-1.47.756-2.52.756Zm.862-1.974c.742 0 1.344-.189 1.806-.567.476-.378.714-.868.714-1.47v-1.407h-2.835c-.532 0-.96.154-1.281.462-.322.308-.483.714-.483 1.218 0 .546.182.98.546 1.302.378.308.889.462 1.533.462Zm8.308 1.764v-2.394h4.032v-6.783h-3.507V21.21h6.027v9.156h3.57v2.394H44.78Zm5.082-13.482c-.532 0-.952-.133-1.26-.399-.308-.28-.462-.651-.462-1.113 0-.462.154-.826.462-1.092.308-.28.728-.42 1.26-.42s.952.14 1.26.42c.308.266.462.63.462 1.092 0 .462-.154.833-.462 1.113-.308.266-.728.399-1.26.399Zm7.53 13.482V21.21h2.562v2.205h.714l-.714.609c0-.952.273-1.694.82-2.226.56-.532 1.322-.798 2.288-.798 1.134 0 2.037.378 2.71 1.134.685.756 1.028 1.771 1.028 3.045v7.581h-2.625v-7.308c0-.7-.182-1.239-.546-1.617-.364-.378-.875-.567-1.533-.567-.644 0-1.155.196-1.533.588-.364.392-.546.952-.546 1.68v7.224h-2.625Zm12.55 0V17.43H74.5c1.036 0 1.932.196 2.688.588.77.392 1.365.945 1.785 1.659.42.714.63 1.561.63 2.541v5.733c0 .966-.21 1.813-.63 2.541a4.401 4.401 0 0 1-1.785 1.68c-.756.392-1.652.588-2.688.588h-4.557Zm2.625-2.415H74.5c.756 0 1.358-.21 1.806-.63.448-.434.672-1.022.672-1.764v-5.733c0-.728-.224-1.302-.672-1.722-.448-.434-1.05-.651-1.806-.651h-1.932v10.5Zm13.411 2.625c-1.19 0-2.128-.315-2.814-.945-.686-.63-1.029-1.477-1.029-2.541 0-1.134.378-2.009 1.134-2.625.756-.616 1.827-.924 3.213-.924h2.877v-.987c0-.56-.182-.994-.546-1.302-.364-.322-.861-.483-1.491-.483-.574 0-1.05.126-1.428.378a1.476 1.476 0 0 0-.672 1.029H82.66c.126-1.092.616-1.96 1.47-2.604.854-.644 1.946-.966 3.276-.966 1.414 0 2.527.357 3.339 1.071.826.7 1.239 1.652 1.239 2.856v7.833h-2.541v-2.016h-.42l.42-.567c0 .854-.315 1.533-.945 2.037-.63.504-1.47.756-2.52.756Zm.861-1.974c.742 0 1.344-.189 1.806-.567.476-.378.714-.868.714-1.47v-1.407h-2.835c-.532 0-.959.154-1.281.462-.322.308-.483.714-.483 1.218 0 .546.182.98.546 1.302.378.308.889.462 1.533.462ZM98.17 32.76l-3.8-11.55h2.688l2.205 7.014c.126.42.245.854.357 1.302.126.448.217.805.273 1.071.07-.266.161-.623.273-1.071.112-.448.224-.875.336-1.281l2.163-7.035h2.667l-3.78 11.55h-3.381Zm9.569 0v-2.394h4.032v-6.783h-3.507V21.21h6.027v9.156h3.57v2.394h-10.122Zm5.082-13.482c-.532 0-.952-.133-1.26-.399-.308-.28-.462-.651-.462-1.113 0-.462.154-.826.462-1.092.308-.28.728-.42 1.26-.42s.952.14 1.26.42c.308.266.462.63.462 1.092 0 .462-.154.833-.462 1.113-.308.266-.728.399-1.26.399Zm11.772 13.671c-.882 0-1.652-.14-2.31-.42-.658-.28-1.176-.665-1.554-1.155-.364-.504-.56-1.092-.588-1.764h2.625c.028.364.203.658.525.882.336.224.77.336 1.302.336h.924c.644 0 1.127-.126 1.449-.378.322-.252.483-.595.483-1.029 0-.406-.147-.721-.441-.945-.28-.238-.721-.392-1.323-.462l-1.428-.21c-1.316-.182-2.282-.532-2.898-1.05-.616-.518-.924-1.295-.924-2.331 0-1.078.364-1.911 1.092-2.499.728-.602 1.799-.903 3.213-.903h.798c1.288 0 2.317.287 3.087.861.77.574 1.183 1.344 1.239 2.31h-2.625c-.042-.308-.217-.56-.525-.756-.294-.196-.686-.294-1.176-.294h-.798c-.602 0-1.043.112-1.323.336-.266.21-.399.525-.399.945 0 .392.119.686.357.882.238.182.623.315 1.155.399l1.491.21c1.372.196 2.38.567 3.024 1.113.658.532.987 1.323.987 2.373 0 1.12-.385 1.995-1.155 2.625-.756.616-1.876.924-3.36.924h-.924Z\\"/>\\n</svg>\\n```\\n\\nThen I had to create my CSS module for the logo component:\\n```css title=\\"scr/components/brand/logo/Logo.module.css\\"\\n:root,\\n[data-theme=\'light\'] {\\n    --color-logo-background: #FDF6E3;\\n    --color-logo-border: #B58900;\\n    --color-logo-text-main: #2AA198;\\n    --color-logo-text-accent: #CB4B16;\\n}\\n\\n[data-theme=\'dark\'] {\\n    --color-logo-background: #1F1F1F;\\n    --color-logo-text-accent: #4EC9B0;\\n    --color-logo-text-main: #CE9178;\\n    --color-logo-border: #569CD6;\\n}\\n\\n[data-fill=\\"background\\"] {\\n    fill: var(--color-logo-background);\\n}\\n\\n[data-fill=\\"text-main\\"] {\\n    fill: var(--color-logo-text-main);\\n}\\n\\n[data-fill=\\"text-accent\\"]{\\n    fill: var(--color-logo-text-accent);\\n}\\n\\n[data-fill=\\"border\\"]{\\n    fill: var(--color-logo-border);\\n}\\n```\\n\\nand it worked straight away!\\n\\n<Logo />\\n\\nAt the moment, I still have a dependency on the original .svg files in a couple\\nof places: the favicon for sure. And the navbar expects a file path, instead of\\na React component. But there is a work-around for that that I\'ve used before\\nwhen I was working on a project with OAuth login and I wanted to include a\\nlogin-state component in the navbar. I\'ll probably re-implement that eventually,\\nand then I can strip down the number of files I\'m managing for my logo from\\nsomething like thirty down to six. I may try to figure out later how to make the\\nback-plate element responsive to styles too, and then I can get that number down\\neven further.\\n\\nAnd the resulting React component is more portable, because it has no\\ndependencies on things that are in supplementary Docusaurus addons. And if the\\ntime comes I want a variation in different colors, all I have to do is define\\nnew CSS variables to get it."},{"id":"/2024/09/14/2024-09-14-impromptu-brand-work/impromptu-brand-work","metadata":{"permalink":"/preview/pr-62/blog/2024/09/14/2024-09-14-impromptu-brand-work/impromptu-brand-work","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-14-impromptu-brand-work/2024-09-14-impromptu-brand-work.mdx","source":"@site/blog/2024-09-14-impromptu-brand-work/2024-09-14-impromptu-brand-work.mdx","title":"Impromptu Brand Work","description":"I didn\'t intend to create a bunch of brand graphics. I just knew I was going to","date":"2024-09-14T16:41:00.000Z","tags":[{"inline":false,"label":"My Brand","permalink":"/preview/pr-62/blog/tags/brand","description":"Posts to do with developing my personal brand"},{"inline":false,"label":"Graphics, Icons & Logos","permalink":"/preview/pr-62/blog/tags/graphics","description":"Posts to do with created visual elements"}],"readingTime":6.385,"hasTruncateMarker":true,"authors":[{"name":"Iain Davis","title":"Software Engineer, Principal @ IainDavis.dev","url":"https://iaindavis.dev","email":"iain@iaindavis.dev","page":{"permalink":"/preview/pr-62/blog/authors/iain"},"socials":{"github":"https://github.com/IainDavis","linkedin":"https://www.linkedin.com/in/iaindavis-dev/","stackoverflow":"https://stackoverflow.com/users/11380293/iaindavis-dev","reddit":"https://www.reddit.com/user/IainDavis-dev/"},"imageURL":"/preview/pr-62/img/authors/idavis.jpg","key":"iain"}],"frontMatter":{"title":"Impromptu Brand Work","date":"2024-09-14T16:41","authors":["iain"],"tags":["brand","graphics"]},"unlisted":false,"prevItem":{"title":"Making My Logo a Component","permalink":"/preview/pr-62/blog/2024/09/15/2024-09-15-logo-component/logo-component"},"nextItem":{"title":"Challenges Getting Docusaurus Styles Into Storybook","permalink":"/preview/pr-62/blog/2024/09/14/2024-09-14-docusaurus-styles-in-storybook/docusaurus-styles-in-storybook"}},"content":"import Logo from \'@site/src/components/brand/Logo/Logo\';\\nimport FavIcon from \'/img/logo-favicon.svg\'\\n\\nexport const containerStyle = {\\n    display: \'flex\',\\n    justifyContent: \'center\',\\n    width: \'500px\',\\n}\\n\\nexport const paneStyle = {\\n    width: \'250px\',\\n    height: \'200px\',\\n    padding: \'2em\',\\n    display: \'flex\',\\n    justifyContent: \'flex-start\',\\n    alignItems: \'center\',\\n    flexDirection: \'column\',\\n}\\n\\nexport const contraLightStyle = {\\n    background: \'#1f1f1f\',\\n    color: \'#ffffff\',\\n}\\n\\nexport const contraDarkStyle = {\\n    background: \'#ffffff\',\\n    color: \'#1f1f1f\',\\n}\\n\\nexport const wrapperStyle = {\\n    margin: \'auto\',\\n}\\n\\nI didn\'t intend to create a bunch of brand graphics. I just knew I was going to\\nhave to replace the default docusaurus logos with _something_.\\n\\n<Logo />\\n\\n:::info TL;DR\\n[Figma](https://www.figma.com/design/dJ0DvH5jER1LKScn4PTnil/IainDavis.dev-Brand-Materials?node-id=5-681&node-type=canvas&m=dev)\\n:::\\n\\nTRUNCATE_HERE\\n\\nI spent some time prompting AI to suggest me some logos. It didn\'t really\\nget what I was after. But it did stir some ideas in me. In the end I settled on\\nthe UML \'lollipop\' notation for an interface.\\n\\nFor anybody not familiar with UML, that looks like this:\\n\\n![UML Component Diagram Interface/Contract relationship notation, or\\n\\"Lollipop\\"](./_resources/lollipop.png)\\n\\nThe element on the right is going to perform some function. As part of that\\nfunction, it needs to use another element. Before it can use the other element,\\nit needs to know that that element _has certain things_ or _can do certain\\nthings_.\\n\\nThat set of needed things is called an interface. The element on the left wants\\nto use that interface, the one on the right provides an implementation of that\\ninterface. Usually an interface will have a name indicating what an object that\\nimplements it is supposed to do. An object that fulfills a `Downloadable`\\ninterface probably has a function on it called `Download()`. Different\\n`Downloadable` objects might do that operation in different ways, though.\\n\\nI landed on this rough concept:\\n\\n![UML Object \'IainDavis\' which provides interface \'dev\'](_resources/iaindavis.dev%20lollipop.png)\\n\\nConceptually, what that says is \\"IainDavis\\" is an entity that can do the set of\\nthings identified by the name \\"dev\\". It\'s graphically nice and clean, and it\\nsays something about what I do to people who are familiar with that kind of\\nwork.\\n\\nGood so far. But then, it\'s a little TOO clean isn\'t it? Just sort of boring in\\nblack and white and default fonts.\\n\\nThe next thing I needed is some colors. I have some experience in colors and\\naesthetics, but I really kind of want to move along quickly with this thing and\\nnot get so hung up in every detail. What I really needed is a pre-defined set of\\ncolors that are going to look reasonably attractive together, be distinctive,\\nand recognizable from a distance. Ideally, they should also relate to my work in\\nsome way, and they should be themable, since I want this website to be a\\nshowcase for what I can do. I should make the most of what Docusaurus offers,\\nincluding dark and light themes.\\n\\nIt didn\'t take me long to land on using syntax highlighting colors. The ones I\\nchose are from VS Code. The dark theme colors are from the default dark theme,\\nand the light theme colors are from the Solarized Light theme.\\n\\nThe last thing I needed was fonts. I just picked a couple reasonably attractive\\nmonospace fonts: JetBrains Mono and Fira Code. The rest of my styles are just\\nthe Docusaurus defaults.\\n\\nAlright, where are we at?\\n\\n<div style={containerStyle}>\\n    <div style={{...contraLightStyle, ...paneStyle}} data-theme=\\"light\\">\\n        <h3>Light theme</h3>\\n        <div style={wrapperStyle}>\\n            <Logo />\\n        </div>\\n    </div>\\n    <div style={{...contraDarkStyle, ...paneStyle}} data-theme=\\"dark\\">\\n        <h3>Dark theme</h3>\\n        <div style={wrapperStyle} >\\n            <Logo />\\n        </div>\\n    </div>\\n</div>\\n\\n<br/>\\nHey, that\'s pretty good! I will definitely use that. But it\'s a bit too wide to\\nreplace the Docusaurus logo in the navbar with. I need something more compact.\\n\\nafter some adjustments:\\n\\n<div style={containerStyle}>\\n    <div style={{...contraLightStyle, ...paneStyle}} data-theme=\\"light\\">\\n        <h3>Light theme</h3>\\n        <div style={wrapperStyle}>\\n            <Logo variant=\\"compact\\"/>\\n        </div>\\n    </div>\\n    <div style={{...contraDarkStyle, ...paneStyle}} data-theme=\\"dark\\">\\n        <h3>Dark theme</h3>\\n        <div style={wrapperStyle} >\\n            <Logo variant=\\"compact\\"/>\\n        </div>\\n    </div>\\n</div>\\n\\nOkay, that\'s good for the remaining stuff. But I still need a favIcon. The\\ndetail in that logo just gets completely lost at the resolution of a browser\\ntab. I think I can probably just get away with the dark theme for this, though.\\n\\n<div style={containerStyle}>\\n    <div style={{...contraDarkStyle, ...paneStyle}} data-theme=\\"light\\">\\n        <FavIcon/>\\n    </div>\\n</div>\\n\\nAlright! Clearly part of the same family of icons, but simple enough to read on\\na browser tab.\\n\\nCool. I think I\'m done!\\n\\nUntil I have too long to sit in a Zoom meeting. Jeez this room looks cluttered.\\nEven with the picture blurred. I look disorganized and messy. I should probably\\ndo some zoom backgrounds. I don\'t just want flat color though... and I _did_\\njust upgrade my ChatGPT to plus, which means I can use DALL-E. Ah well, I\'ve got\\nfifteen minutes left in this workshop. Let\'s see what I can come up.\\n\\n_a couple hours later..._\\n\\n![greyscale abstract image evoking aspects of software design: whiteboards, charts, sticky notes, arranged in an isometric space](/img/zoom/zoom-bg-01.png \\"Isometric Whiteboards\\")\\n\\n![greyscale abstract image of planet viewed from space with geometric shapes in the foreground](/img/zoom/zoom-bg-02.png \\"Planet Stickynote\\")\\n\\n![Impressionistic combination of cloud forms and a rectilinear grid, in greyscale with accents in terra cotta and cadet blue](/img/zoom/zoom-bg-03.png \\"Gridspace Nebula\\")\\n\\n![Impressionistic image evoking a planet in near-eclipse rising from cloud forms. The image is mostly grayscale, but with accents in terra cotta and cadet blue](/img/zoom/zoom-bg-04.png)\\n\\n![Abstract image of squares in grayscale with yellow and blue highlights](/img/zoom/zoom-bg-05.png)\\n\\n![Abstract image featuring round forms against a rectilinear background in\\nshades of grey with blue and orange highlights](/img/zoom/zoom-bg-06.png);\\n\\nI had a lot of fun doing all these things, and as a result I have more\\nconsistent branding across my digital presences: LinkedIn, GitHub, this here \\nwebsite.\\n\\nInitially, I thought I\'d get by using the tools I already know best which, for\\nme, meant draw.io and Inkscape. Unfortunately `draw.io` does some strange stuff\\nwhen exporting SVGs with text content, and it doesn\'t readily give you a way to\\nconvert text content into regular vectors, more\'s the pity. And Inkscape, while\\npowerful, proved unequal to the task of correcting draw.io\'s shortcomings.\\n\\nOkay, so great for diagrams with loads of annotations, not so good for visual\\narts.\\n\\nIn the end I opted to go for Figma. It\'s what all the design-type people at\\nIntuit use, and I\'m glad I chose it. It made the whole process easier. I\\nactually re-implemented all of the above graphics all over again from scratch in\\nFigma, and I learned a lot about that tool along the way.\\n\\n## What I learned doing this\\n### AI\\nI\'m always learning more about how to get AI to do things I want it to do. I\\nnever really _did_ get it to do precisely what I wanted... getting DALL-E to\\ngive you something _without_ a point of focus that _doesn\'t_ try to make use of the full\\nspectrum from light to dark is surprisingly difficult. It\'s learned a lot of\\nrules about what makes a picture \'good\' that it doesn\'t want to unlearn. But I\\ndidn\'t want \\"art\\" so much as \\"texture\\". **I** want to be the focus in my Zoom call.\\n\\nI did ask it to give me things that evoke technology, and particular the process\\nof designing software, and it did surprisingly well at that task, I think.\\n\\n### Figma\\nFigma is pretty great! I think by far my favorite thing was discovering I could\\ndo theme-ing right in the tool. If you look at my Figma for this work, there\'s a\\ndark and light version of each logo... those are actually copies of the exact\\nsame object, just with a different set of variables applied. I was so interested\\nin that, I shelled out the $144 for a paid license for a year. Super cool.\\n\\nAnd now I have all my brand materials consolidated in one place, which is nice."},{"id":"/2024/09/14/2024-09-14-docusaurus-styles-in-storybook/docusaurus-styles-in-storybook","metadata":{"permalink":"/preview/pr-62/blog/2024/09/14/2024-09-14-docusaurus-styles-in-storybook/docusaurus-styles-in-storybook","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-14-docusaurus-styles-in-storybook/2024-09-14-docusaurus-styles-in-storybook.mdx","source":"@site/blog/2024-09-14-docusaurus-styles-in-storybook/2024-09-14-docusaurus-styles-in-storybook.mdx","title":"Challenges Getting Docusaurus Styles Into Storybook","description":"I thought it would be a good idea to have a central location to showcase","date":"2024-09-14T14:40:00.000Z","tags":[{"inline":false,"label":"Docusaurus","permalink":"/preview/pr-62/blog/tags/docusaurus","description":"Posts related to working with Docusaurus configuration and components"},{"inline":false,"label":"Storybook","permalink":"/preview/pr-62/blog/tags/storybook","description":"Posts to do with configuring or using Storybook"},{"inline":false,"label":"Formatting/Styles/CSS","permalink":"/preview/pr-62/blog/tags/formatting","description":"Posts to do with configuring styles and formatting"}],"readingTime":2.655,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Challenges Getting Docusaurus Styles Into Storybook","date":"2024-09-14T14:40","tags":["docusaurus","storybook","formatting"]},"unlisted":false,"prevItem":{"title":"Impromptu Brand Work","permalink":"/preview/pr-62/blog/2024/09/14/2024-09-14-impromptu-brand-work/impromptu-brand-work"},"nextItem":{"title":"Expandable!","permalink":"/preview/pr-62/blog/2024/09/14/2024-09-14-expandable/expandable"}},"content":"import Expandable from \'@site/src/components/Expandable/Expandable\';\\n\\nI thought it would be a good idea to have a central location to showcase\\nwhatever components I add to the Docusaurus repertoire.\\n\\nI\'d worked with [Storybook](https://storybook.js.org/) before, and found it\\npretty handy. During development, it gives you a way to interact with a component-in-progress and\\nsee that it works as intended. It can serve as a beginning basis for unit and\\ncomponent tests, and it can be a really handy tool for communicating with\\nnon-technical stakeholders... clicking on a component and seeing immediately how\\nit responds is much easier to grasp than an engineer trying to explain something\\nto you in non-engineer-speak as best they can. The proof is in the pudding, as\\nthey say.\\n\\nTRUNCATE_HERE\\n\\nAnother nice feature is its extensibility. If it doesn\'t do something you want\\nit to do, you can often create an addon or a decorator that will accomplish it.\\n\\nSo I downloaded the dependency, and began writing stories for my shiny new\\n\'Expandable\' component.\\n\\nImagine my distress when I started up the development server for the first time\\nand saw that my themes weren\'t being applied to the custom element. I worked\\nhard to include those themes!\\n\\n(I promise, I\'m clicking the button in the screen recording shown below)\\n\\n![screen capture showing theme button being clicked, and nothing changing in the\\ndisplay](./_screengrabs/broken.gif \\"Oh Noes!\\")\\n\\nIt took me a little while to track down the problem. It turns out that\\nDocusaurus and Storybook drive their theme-based styles off of different\\nconditions. Docusaurus applies a data attribute at the root of the HTML\\ndocument, which it then uses as the selector for its CSS styles. Storybook uses\\nthe built-in `class` attribute.\\n\\nI didn\'t want to pollute my code with a bunch of redundant attributes that\\naccomplish the same thing. Happily, I was able to leverage Storybook\'s\\nextensibility to solve that problem.\\n\\nI created a Decorator... an object that Storybook, in essence, wraps _around_\\nyour stories to provide new functionality. In this case, I captured the current\\ntheme from the Storybook context, and set the `data-theme` attribute at the root\\nof the preview pane accordingly.\\n\\nHere\'s my very simple decorator:\\n```typescript title=\'withDocusaurusStyles.ts\'\\nimport React from \\"react\\";\\nimport { useEffect } from \\"react\\";\\n\\n// apply a data attribute (\'data-theme\') at the root element of the\\n// Storybook preview iframe so that Docusaurus styles are applied\\n// within the preview\\nexport default (Story, context) => {\\n    const { theme=\'light\' } = context?.globals;\\n    useEffect(() => {\\n        const themeRoot = document.querySelector(\'html\');\\n        themeRoot && themeRoot.setAttribute(\'data-theme\', theme);\\n    }, [theme])\\n\\n    return <Story />\\n}\\n```\\n\\nI applied those to every published story via my `.storybook/preview.ts` file, and now my\\nthemed Docusaurus components respond to the dark/light theme in Storybook!\\n\\n```typescript title=\\".storybook/preview.ts\\"\\nimport type { Preview } from \\"@storybook/react\\";\\nimport \'./assets/styles/docusaurus_global.css\'\\nimport withDocusaurusStyles from \'./decorators/withDocusaurusStyles\';\\nimport { withThemeByClassName } from \\"@storybook/addon-themes\\";\\n\\nconst preview: Preview = {\\n  decorators: [\\n    // highlight-next-line\\n    withDocusaurusStyles,\\n    withThemeByClassName({\\n      themes: {\\n        light: \'light\',\\n        dark: \'dark\' ,\\n      },\\n      defaultTheme: \'light\',\\n    })\\n  ],\\n  parameters: {\\n    controls: {\\n      matchers: {\\n        color: /(background|color)$/i,\\n        date: /Date$/i,\\n      },\\n    },\\n  },\\n};\\n\\nexport default preview;\\n```\\n\\nPretty pleased.\\n\\n![Screen capture showing theme button being clicked and colors being applied as expected](./_screengrabs/fixed.gif \\"Thats more like it\\")"},{"id":"/2024/09/14/2024-09-14-expandable/expandable","metadata":{"permalink":"/preview/pr-62/blog/2024/09/14/2024-09-14-expandable/expandable","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-14-expandable/2024-09-14-expandable.mdx","source":"@site/blog/2024-09-14-expandable/2024-09-14-expandable.mdx","title":"Expandable!","description":"I really like Docusaurus, but I also find there are some things it\'s missing.","date":"2024-09-14T11:28:00.000Z","tags":[{"inline":false,"label":"Storybook","permalink":"/preview/pr-62/blog/tags/storybook","description":"Posts to do with configuring or using Storybook"},{"inline":false,"label":"Docusaurus","permalink":"/preview/pr-62/blog/tags/docusaurus","description":"Posts related to working with Docusaurus configuration and components"},{"inline":false,"label":"Custom Docusaurus Components","permalink":"/preview/pr-62/blog/tags/custom-components","description":"Posts to do with components I\'ve developed to extend Docusaurus functionallity"},{"inline":false,"label":"React","permalink":"/preview/pr-62/blog/tags/react","description":"Posts to do with the React ecosystem"}],"readingTime":4.455,"hasTruncateMarker":true,"authors":[{"name":"Iain Davis","title":"Software Engineer, Principal @ IainDavis.dev","url":"https://iaindavis.dev","email":"iain@iaindavis.dev","page":{"permalink":"/preview/pr-62/blog/authors/iain"},"socials":{"github":"https://github.com/IainDavis","linkedin":"https://www.linkedin.com/in/iaindavis-dev/","stackoverflow":"https://stackoverflow.com/users/11380293/iaindavis-dev","reddit":"https://www.reddit.com/user/IainDavis-dev/"},"imageURL":"/preview/pr-62/img/authors/idavis.jpg","key":"iain"}],"frontMatter":{"title":"Expandable!","date":"2024-09-14T11:28","authors":["iain"],"tags":["storybook","docusaurus","customComponents","react"]},"unlisted":false,"prevItem":{"title":"Challenges Getting Docusaurus Styles Into Storybook","permalink":"/preview/pr-62/blog/2024/09/14/2024-09-14-docusaurus-styles-in-storybook/docusaurus-styles-in-storybook"},"nextItem":{"title":"Catch-Up Post","permalink":"/preview/pr-62/blog/2024/09/14/2024-09-14-catch-up/catch-up"}},"content":"import Expandable from \'@site/src/components/Expandable/Expandable\'\\n\\nI really like Docusaurus, but I also find there are some things it\'s missing.\\nHappily, one of the _best_ things about it is that it is, at bottom, React,\\nwhich means you can add the things you find missing.\\n\\nTRUNCATE_HERE\\n\\nOne of the things I run into most frequently that strikes me as a glaring and\\npuzzling ommission is the lack of a collapsible section of content. To be sure,\\nmarkdown generally (and Docusaurus specifically) supports using the `details`\\nelement. But Docusaurus handling of it adds styling I would not choose to add by\\ndefault, like so:\\n\\n> ```\\n> <details>\\n> <summary>This is an expandable block</summary>\\n> \\n> It has some additional content that you may opt-in to, or simply pass over as you please.\\n> It\'s also obnoxiously removed from the primary flow of the document.\\n> </details>\\n> ```\\n>\\n> <details>\\n> <summary>This is an expandable block</summary>\\n> \\n> It has some additional content that you may opt-into, or simply pass over as you please.\\n> \\n> It\'s also obnoxiously shifted out of the primary flow of the document by\\n> excessive default styling.\\n> </details>\\n\\nThis is fine and good if what you want is to highlight something. But very often\\nwhat I want is to _elide_ something -- to give the reader only the information\\nthey need at the time, and not bury it in unnecessary content. An example might\\nbe instructions on installing Java. Some subset of your team might need those\\ninstructions if they are new joiners, and it should be there in the flow of the\\ndocument where they would expect to find it. But most folks who\'ve been on your\\nteam a while will probably know how to install Java, and can quite happily skip\\nover those instructions.\\n\\nSo I came up with my own little Expandable component:\\n\\n---\\n### Expandable!\\n<Expandable>\\n\\nIt\'s discreet, and it leaves the elided content in place in the regular flow of\\nthe document. It also features simple visual elements to clarify the extent of\\nthe expanded portion. It supports content in:\\n\\n* text\\n* JSX\\n* markdown\\n\\n<h2>Here\'s some JSX</h2>\\n</Expandable>\\n---\\n\\nHere\'s what the code/markdown looks like:\\n```markdown\\n### Expandable\\n<Expandable>\\n\\nIt\'s discreet, and it leaves the elided content in place in the regular flow of\\nthe document. It also features simple visual elements to clarify the extent of\\nthe expanded portion. It supports content in:\\n\\n* text\\n* JSX\\n* markdown\\n\\n<h2>Here\'s some JSX</h2>\\n</Expandable>\\n```\\n\\nIn addition to the above, it supports starting in the expanded state, and custom\\nexpand/collapse prompts. See the [Storybook](http://localhost:3000/storybook/iaindavis.dev/?path=/docs/custom-components-expandable--docs)\\n\\n### What I learned from building this component\\n#### CSS Modules\\nCSS Modules is the default assumption of Docusaurus. I hadn\'t much used it\\nyet... I\'ve used CSS in JS a bit, and `styled-components` a bit. I like CSS\\nModules for keeping things, well, modular. And the simplicity and directness of\\nit is nice. I do like the dynamism that `styled-components` provides though.\\n\\n#### CSS Pseudo-Selectors\\nI also had to give myself a little bit of a refresher on pseudo-selectors. I\\nused `:before` and `:after` to inject the little ornamental circles at the top\\nand bottom of the left-hand line showing the extent of the expandable section.\\n\\n### What I still want to do\\n* I\'d love to introduce an \'exclusive\' option so that you can assign each one to a\\ngroup, and then expanding one block in the group causes the rest to\\nautomatically collapse. Not really sure what the best way to go about producing\\nthe shared state is yet. I suppose maybe swapping out my functional react\\ncomponent with a class component and storing some of the state on the class\\ndefinition, but I\'ll give it some more thought before I jump in. For now, I\'m\\nhappy with how it is.\\n\\n* I also initially played around with a \'title\' property that caused some text to\\nbe rendered above the expandable portion. I eventually landed on the decision\\nthat the surrounding markdown was already suitable for that purpose, but I may\\nchange my mind some time in the future and reintroduce that feature.\\n\\n* Eventually, I\'d like to move this and any other component I build for this\\n  purpose into their own Docusaurus component library so that I can use them in\\n  other repositories as well.\\n\\n* Still need to sort out testing. I\'ve had some difficulty converting my\\n  Storybook stories to Jest tests. Mostly with the import of various assets\\n  being handled differently by Storybook, Jest, and Docusaurus. I\'m working with\\n  several tiers of pre-processing (TypeScript, React/JSX, Storybook, Jest) and\\n  several kinds of files being treated as modules that are not usually (CSS,\\n  MDX). Getting all those things to work in concert has been something of a\\n  challenge. I may do another blog post just on that. But in the mean-time, I\'m\\n  thinking of just using Storybook as a showcase, and relying on something\\n  purpose built for testing. I\'m considering giving Playwright a go for\\n  component testing. Or maybe I\'ll use the Storybook environment directly,\\n  rather than running it through Jest, if I can figure out how to automate that.\\n\\n  Time will tell. For now, I\'m happy to have my new little component that makes\\n  Docusaurus just that little bit more useful to me.\\n\\n[storybook.expandable]:\\n    \'/storybook/iaindavis.dev/?path=/story/custom-components-expandable--default\\n    \\"Expandable component Storybook showcase\\""},{"id":"/2024/09/14/2024-09-14-catch-up/catch-up","metadata":{"permalink":"/preview/pr-62/blog/2024/09/14/2024-09-14-catch-up/catch-up","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-09-14-catch-up/2024-09-14-catch-up.mdx","source":"@site/blog/2024-09-14-catch-up/2024-09-14-catch-up.mdx","title":"Catch-Up Post","description":"This post is a catch-up post to explain the purpose of this website, and how I got to this point. Going forward, I intend to post","date":"2024-09-14T11:23:00.000Z","tags":[{"inline":false,"label":"Docusaurus","permalink":"/preview/pr-62/blog/tags/docusaurus","description":"Posts related to working with Docusaurus configuration and components"},{"inline":false,"label":"My Brand","permalink":"/preview/pr-62/blog/tags/brand","description":"Posts to do with developing my personal brand"}],"readingTime":2.71,"hasTruncateMarker":true,"authors":[{"name":"Iain Davis","title":"Software Engineer, Principal @ IainDavis.dev","url":"https://iaindavis.dev","email":"iain@iaindavis.dev","page":{"permalink":"/preview/pr-62/blog/authors/iain"},"socials":{"github":"https://github.com/IainDavis","linkedin":"https://www.linkedin.com/in/iaindavis-dev/","stackoverflow":"https://stackoverflow.com/users/11380293/iaindavis-dev","reddit":"https://www.reddit.com/user/IainDavis-dev/"},"imageURL":"/preview/pr-62/img/authors/idavis.jpg","key":"iain"}],"frontMatter":{"title":"Catch-Up Post","date":"2024-09-14T11:23","authors":["iain"],"tags":["docusaurus","brand"]},"unlisted":false,"prevItem":{"title":"Expandable!","permalink":"/preview/pr-62/blog/2024/09/14/2024-09-14-expandable/expandable"}},"content":"import React from \'react\';\\n\\nThis post is a catch-up post to explain the purpose of this website, and how I got to this point. Going forward, I intend to post\\nwhatever is going on with development of this website here.\\n\\nTRUNCATE_HERE\\n\\nThe intent of this site is to provide a landing place for anybody\\nlooking into me as a potential hire, where they could view work I had done and\\nsee engagement with software and the industry in an ongoing way. And to \\nlearn something about me beyond what\'s in my CV. I thought it\\nwould be a good place to showcase:\\n\\n  * Personal projects\\n  * Code katas\\n  * Design katas\\n  \\nWith the design katas in particular, I see an opportunity to showcase the things\\nan employer might want to know about a prospect: how do they think about design?\\nHow do they communicate ideas to technical and non-technical stakeholders? How\\ndo they make decisions? To be sure, this is an area where I have significant\\nroom for growth, and the hope is that the work done for this site will serve as\\nmuch for learning and practice as demonstration.\\n\\nI started a project a little while ago to help me mitigate some of the\\nthings in GMail that I find to be shortcomings.  (That project isn\'t\\nfinished, but the progress will be shared here when I get back to it).\\n\\nWhile I was working on that, I knew I should be documenting the work. What I\'m\\nselling isn\'t the product, but the process, and the organization. I\'m not\\nselling the projects I build, I\'m selling _how I build projects_. I wasn\'t\\nreally making the most of the project I was working on until I could say I\\nwas doing that.\\n\\nFor that, I needed a **place** to document the work.  Setting up this\\npersonal showcase space has always been on my agenda, but I figured I needed to\\nmake it a priority to help with my job search.\\n\\nI already had a personal domain set up. I was using it for email forwarding --\\nto give me a professional email address distinct from my personal one, without\\nalso having to manage separate Google accounts (with separate billing,\\nsubscriptions, _etc._). I had experience using Docusaurus, and publishing it via\\nGitHub pages; I maintained a \\"notes\\" repository at Intuit, both for organizing\\nmy own thoughts as I worked on something, and also for sharing out certain\\nthings. Also, part of what I want to showcase is well-organized documentation,\\nso these things are a natural fit.\\n\\nTo be sure, I have a lot still to do here. But I think I\'ve got things to a\\npoint where I need to start worrying about content as much as about my\\nrepositories. People can get here from [my LinkedIn profile](https://linkedin/in/IainDavis-dev) \\nnow, so there better be something here for them to see, even if it\'s not really\\nany projects (beyond the site itself) just yet.\\n\\nHence this catch-up post and getting this blog going.\\n\\nI\'ll post a couple more times today, about decisions I\'ve already made, and\\nabout what\'s coming next for this site. Then the intent is to update this\\nperiodically with my thoughts and decisions related to the development of this\\npage.\\n\\nThanks for visiting!"}]}}')}}]);